{
  "openapi": "3.1.0",
  "info": {
    "title": "IT Budget Manager",
    "description": "API для управления бюджетом IT-отдела",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register",
        "description": "Register a new user\n\n- **username**: Unique username (3-100 characters)\n- **email**: Valid email address\n- **password**: Password (min 6 characters, must contain letter and digit)\n- **role**: User role (ADMIN, MANAGER, USER)",
        "operationId": "register_api_v1_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "description": "Login with username/email and password\n\nReturns JWT access token and user information",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Current User Info",
        "description": "Get current user information\n\nRequires authentication",
        "operationId": "get_current_user_info_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Update Current User",
        "description": "Update current user information\n\nUsers can only update their own profile (except admins)",
        "operationId": "update_current_user_api_v1_auth_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/me/change-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Change Password",
        "description": "Change current user password",
        "operationId": "change_password_api_v1_auth_me_change_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Change Password Api V1 Auth Me Change Password Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/users": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "List Users",
        "description": "List all users (Admin only)",
        "operationId": "list_users_api_v1_auth_users_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserListItem"
                  },
                  "title": "Response List Users Api V1 Auth Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/users/{user_id}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get User",
        "description": "Get user by ID (Admin only or own profile)",
        "operationId": "get_user_api_v1_auth_users__user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Update User",
        "description": "Update user by ID (Admin only)",
        "operationId": "update_user_api_v1_auth_users__user_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Delete User",
        "description": "Delete user by ID (Admin only)\n\nNote: This is a hard delete. Consider using deactivation instead.",
        "operationId": "delete_user_api_v1_auth_users__user_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "List Departments",
        "description": "List all departments\n\n- **ADMIN**: Can see all departments\n- **MANAGER**: Can see all departments\n- **USER**: Can only see their own department",
        "operationId": "list_departments_api_v1_departments__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentListItem"
                  },
                  "title": "Response List Departments Api V1 Departments  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Create Department",
        "description": "Create a new department (ADMIN only)\n\n- **name**: Department name (unique, 2-255 characters)\n- **code**: Department code (unique, 2-50 characters)\n- **description**: Optional description\n- **manager_name**: Optional manager name\n- **contact_email**: Optional contact email\n- **contact_phone**: Optional contact phone\n- **is_active**: Active status (default: true)",
        "operationId": "create_department_api_v1_departments__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/{department_id}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get Department",
        "description": "Get department by ID\n\n- **ADMIN/MANAGER**: Can view any department\n- **USER**: Can only view their own department",
        "operationId": "get_department_api_v1_departments__department_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Departments"
        ],
        "summary": "Update Department",
        "description": "Update department by ID (ADMIN only)",
        "operationId": "update_department_api_v1_departments__department_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Department Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Departments"
        ],
        "summary": "Deactivate Department",
        "description": "Deactivate department by ID (ADMIN only)\n\nNote: This is a soft delete (sets is_active = false).\nDepartment data is preserved for historical reporting.",
        "operationId": "deactivate_department_api_v1_departments__department_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/{department_id}/stats": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get Department Stats",
        "description": "Get department with statistics\n\nReturns department info with:\n- users_count: Number of users in department\n- expenses_count: Number of expenses\n- total_budget: Sum of all budget plans\n\n- **ADMIN/MANAGER**: Can view any department stats\n- **USER**: Can only view their own department stats",
        "operationId": "get_department_stats_api_v1_departments__department_id__stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentWithStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/{department_id}/activate": {
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Activate Department",
        "description": "Reactivate a deactivated department (ADMIN only)",
        "operationId": "activate_department_api_v1_departments__department_id__activate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/": {
      "get": {
        "tags": [
          "Audit Logs"
        ],
        "summary": "Get Audit Logs",
        "description": "Get audit logs\n\n- **ADMIN**: Can view all audit logs\n- **MANAGER**: Can view audit logs for all departments\n- **USER**: Can only view audit logs for their department",
        "operationId": "get_audit_logs_api_v1_audit__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AuditActionEnum"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Action"
            }
          },
          {
            "name": "entity_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Entity Type"
            }
          },
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Entity Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by department",
              "title": "Department Id"
            },
            "description": "Filter by department"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in description",
              "title": "Search"
            },
            "description": "Search in description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLogWithUser"
                  },
                  "title": "Response Get Audit Logs Api V1 Audit  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/{audit_log_id}": {
      "get": {
        "tags": [
          "Audit Logs"
        ],
        "summary": "Get Audit Log",
        "description": "Get audit log by ID",
        "operationId": "get_audit_log_api_v1_audit__audit_log_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "audit_log_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Audit Log Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogWithUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/entity/{entity_type}/{entity_id}": {
      "get": {
        "tags": [
          "Audit Logs"
        ],
        "summary": "Get Entity Audit Logs",
        "description": "Get all audit logs for a specific entity\n\nUseful for viewing history of changes to a particular record",
        "operationId": "get_entity_audit_logs_api_v1_audit_entity__entity_type___entity_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entity_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity Type"
            }
          },
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLogWithUser"
                  },
                  "title": "Response Get Entity Audit Logs Api V1 Audit Entity  Entity Type   Entity Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/export": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Export Expenses To Excel",
        "description": "Export expenses to Excel file\n\n- **USER**: Can only export expenses from their own department\n- **MANAGER**: Can export expenses from all departments\n- **ADMIN**: Can export expenses from all departments",
        "operationId": "export_expenses_to_excel_api_v1_expenses_export_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExpenseStatusEnum"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category Id"
            }
          },
          {
            "name": "contractor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Contractor Id"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by department (ADMIN/MANAGER only)",
              "title": "Department Id"
            },
            "description": "Filter by department (ADMIN/MANAGER only)"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Get Expenses",
        "description": "Get all expenses with filters and pagination\n\n- **USER**: Can only see expenses from their own department\n- **MANAGER**: Can see expenses from all departments\n- **ADMIN**: Can see expenses from all departments",
        "operationId": "get_expenses_api_v1_expenses__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExpenseStatusEnum"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category Id"
            }
          },
          {
            "name": "contractor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Contractor Id"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by department (ADMIN/MANAGER only)",
              "title": "Department Id"
            },
            "description": "Filter by department (ADMIN/MANAGER only)"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "needs_review",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Needs Review"
            }
          },
          {
            "name": "imported_from_ftp",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Imported From Ftp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Create Expense",
        "description": "Create new expense\n\nAuto-assigns to user's department (or can be specified by ADMIN/MANAGER)",
        "operationId": "create_expense_api_v1_expenses__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/{expense_id}": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Get Expense",
        "description": "Get expense by ID",
        "operationId": "get_expense_api_v1_expenses__expense_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Expense Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Expenses"
        ],
        "summary": "Update Expense",
        "description": "Update expense",
        "operationId": "update_expense_api_v1_expenses__expense_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Expense Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Expenses"
        ],
        "summary": "Delete Expense",
        "description": "Delete expense",
        "operationId": "delete_expense_api_v1_expenses__expense_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Expense Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/{expense_id}/status": {
      "patch": {
        "tags": [
          "Expenses"
        ],
        "summary": "Update Expense Status",
        "description": "Update expense status",
        "operationId": "update_expense_status_api_v1_expenses__expense_id__status_patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Expense Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/{expense_id}/mark-reviewed": {
      "patch": {
        "tags": [
          "Expenses"
        ],
        "summary": "Mark Expense Reviewed",
        "description": "Mark expense as reviewed (снимает пометку 'needs_review')",
        "operationId": "mark_expense_reviewed_api_v1_expenses__expense_id__mark_reviewed_patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Expense Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/bulk-delete": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Bulk Delete Expenses",
        "description": "Bulk delete expenses by IDs (ADMIN only)\n\nReturns the number of deleted expenses",
        "operationId": "bulk_delete_expenses_api_v1_expenses_bulk_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "integer"
                },
                "type": "array",
                "title": "Expense Ids"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/expenses/stats/totals": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Get Expense Totals",
        "description": "Get expense totals with filters",
        "operationId": "get_expense_totals_api_v1_expenses_stats_totals_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/import/ftp": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Import Expenses From Ftp",
        "description": "Import expenses from FTP server\n\nThis endpoint will:\n1. Download Excel file from FTP\n2. Delete expenses from specified month onwards (default: July 2025)\n3. Import new expenses from the file\n4. Skip duplicates based on expense number",
        "operationId": "import_expenses_from_ftp_api_v1_expenses_import_ftp_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FTPImportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/categories/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Categories",
        "description": "Get all budget categories\n\n- **USER**: Can only see categories from their own department\n- **MANAGER**: Can see categories from all departments\n- **ADMIN**: Can see categories from all departments",
        "operationId": "get_categories_api_v1_categories__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by department (ADMIN/MANAGER only)",
              "title": "Department Id"
            },
            "description": "Filter by department (ADMIN/MANAGER only)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetCategoryInDB"
                  },
                  "title": "Response Get Categories Api V1 Categories  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create Category",
        "description": "Create new budget category\n\nAuto-assigns to user's department (or can be specified by ADMIN)",
        "operationId": "create_category_api_v1_categories__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCategoryCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetCategoryInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/{category_id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Category",
        "description": "Get category by ID",
        "operationId": "get_category_api_v1_categories__category_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetCategoryInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update Category",
        "description": "Update budget category",
        "operationId": "update_category_api_v1_categories__category_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetCategoryInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete Category",
        "description": "Delete budget category (soft delete - mark as inactive)",
        "operationId": "delete_category_api_v1_categories__category_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/bulk/update": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Bulk Update Categories",
        "description": "Bulk update categories (activate/deactivate)",
        "operationId": "bulk_update_categories_api_v1_categories_bulk_update_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__categories__BulkUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/categories/bulk/delete": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Bulk Delete Categories",
        "description": "Bulk delete categories (soft delete - mark as inactive)",
        "operationId": "bulk_delete_categories_api_v1_categories_bulk_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__categories__BulkDeleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/categories/export": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Export Categories",
        "description": "Export all categories to Excel",
        "operationId": "export_categories_api_v1_categories_export_get",
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/categories/import": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Import Categories",
        "description": "Import categories from Excel file\n\nAll imported categories are assigned to the user's department",
        "operationId": "import_categories_api_v1_categories_import_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_categories_api_v1_categories_import_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/contractors/": {
      "get": {
        "tags": [
          "Contractors"
        ],
        "summary": "Get Contractors",
        "description": "Get all contractors\n\n- **USER**: Can only see contractors from their own department\n- **MANAGER**: Can see contractors from all departments\n- **ADMIN**: Can see contractors from all departments",
        "operationId": "get_contractors_api_v1_contractors__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by department (ADMIN/MANAGER only)",
              "title": "Department Id"
            },
            "description": "Filter by department (ADMIN/MANAGER only)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractorInDB"
                  },
                  "title": "Response Get Contractors Api V1 Contractors  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contractors"
        ],
        "summary": "Create Contractor",
        "description": "Create new contractor\n\nAuto-assigns to user's department (or can be specified by ADMIN)",
        "operationId": "create_contractor_api_v1_contractors__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractorCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractorInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contractors/{contractor_id}": {
      "get": {
        "tags": [
          "Contractors"
        ],
        "summary": "Get Contractor",
        "description": "Get contractor by ID",
        "operationId": "get_contractor_api_v1_contractors__contractor_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "contractor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Contractor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractorInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contractors"
        ],
        "summary": "Update Contractor",
        "description": "Update contractor",
        "operationId": "update_contractor_api_v1_contractors__contractor_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "contractor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Contractor Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractorInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contractors"
        ],
        "summary": "Delete Contractor",
        "description": "Delete contractor (permanently remove from database)",
        "operationId": "delete_contractor_api_v1_contractors__contractor_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "contractor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Contractor Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contractors/bulk/update": {
      "post": {
        "tags": [
          "Contractors"
        ],
        "summary": "Bulk Update Contractors",
        "description": "Bulk activate/deactivate contractors",
        "operationId": "bulk_update_contractors_api_v1_contractors_bulk_update_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__contractors__BulkUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/contractors/bulk/delete": {
      "post": {
        "tags": [
          "Contractors"
        ],
        "summary": "Bulk Delete Contractors",
        "description": "Bulk delete contractors (permanently remove from database)",
        "operationId": "bulk_delete_contractors_api_v1_contractors_bulk_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__contractors__BulkDeleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/contractors/export": {
      "get": {
        "tags": [
          "Contractors"
        ],
        "summary": "Export Contractors",
        "description": "Export contractors to Excel",
        "operationId": "export_contractors_api_v1_contractors_export_get",
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/contractors/import": {
      "post": {
        "tags": [
          "Contractors"
        ],
        "summary": "Import Contractors",
        "description": "Import contractors from Excel\n\nAll imported contractors are assigned to the user's department",
        "operationId": "import_contractors_api_v1_contractors_import_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_contractors_api_v1_contractors_import_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/organizations/": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organizations",
        "description": "Get all organizations\n\n- **USER**: Can only see organizations from their own department\n- **MANAGER**: Can see organizations from all departments\n- **ADMIN**: Can see organizations from all departments",
        "operationId": "get_organizations_api_v1_organizations__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by department (ADMIN/MANAGER only)",
              "title": "Department Id"
            },
            "description": "Filter by department (ADMIN/MANAGER only)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationInDB"
                  },
                  "title": "Response Get Organizations Api V1 Organizations  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Create Organization",
        "description": "Create new organization\n\nAuto-assigns to user's department (or can be specified by ADMIN)",
        "operationId": "create_organization_api_v1_organizations__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization",
        "description": "Get organization by ID",
        "operationId": "get_organization_api_v1_organizations__organization_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organizations"
        ],
        "summary": "Update Organization",
        "description": "Update organization",
        "operationId": "update_organization_api_v1_organizations__organization_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "summary": "Delete Organization",
        "description": "Delete organization (permanently remove from database)",
        "operationId": "delete_organization_api_v1_organizations__organization_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/bulk/update": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Bulk Update Organizations",
        "description": "Bulk activate/deactivate organizations",
        "operationId": "bulk_update_organizations_api_v1_organizations_bulk_update_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__organizations__BulkUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/organizations/bulk/delete": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Bulk Delete Organizations",
        "description": "Bulk delete organizations (permanently remove from database)",
        "operationId": "bulk_delete_organizations_api_v1_organizations_bulk_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__organizations__BulkDeleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/organizations/export": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Export Organizations",
        "description": "Export organizations to Excel",
        "operationId": "export_organizations_api_v1_organizations_export_get",
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/organizations/import": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Import Organizations",
        "description": "Import organizations from Excel\n\nAll imported organizations are assigned to the user's department",
        "operationId": "import_organizations_api_v1_organizations_import_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_organizations_api_v1_organizations_import_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/budget/plans": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Get Budget Plans",
        "description": "Get budget plans",
        "operationId": "get_budget_plans_api_v1_budget_plans_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetPlanInDB"
                  },
                  "title": "Response Get Budget Plans Api V1 Budget Plans Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Budget"
        ],
        "summary": "Create Budget Plan",
        "description": "Create new budget plan",
        "operationId": "create_budget_plan_api_v1_budget_plans_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetPlanCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetPlanInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/plans/{plan_id}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Get Budget Plan",
        "description": "Get budget plan by ID",
        "operationId": "get_budget_plan_api_v1_budget_plans__plan_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Plan Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetPlanInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Budget"
        ],
        "summary": "Update Budget Plan",
        "description": "Update budget plan",
        "operationId": "update_budget_plan_api_v1_budget_plans__plan_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Plan Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetPlanUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetPlanInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Budget"
        ],
        "summary": "Delete Budget Plan",
        "description": "Delete budget plan",
        "operationId": "delete_budget_plan_api_v1_budget_plans__plan_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Plan Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/summary": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Get Budget Summary",
        "description": "Get budget summary (plan vs actual)",
        "operationId": "get_budget_summary_api_v1_budget_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/plans/year/{year}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Get Budget Plan For Year",
        "description": "Get budget plan for entire year in pivot format (categories x months)",
        "operationId": "get_budget_plan_for_year_api_v1_budget_plans_year__year__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/plans/year/{year}/init": {
      "post": {
        "tags": [
          "Budget"
        ],
        "summary": "Initialize Budget Plan",
        "description": "Initialize budget plan for the year (create empty entries for all categories and months)",
        "operationId": "initialize_budget_plan_api_v1_budget_plans_year__year__init_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/plans/year/{year}/copy-from/{source_year}": {
      "post": {
        "tags": [
          "Budget"
        ],
        "summary": "Copy Budget Plan",
        "description": "Copy budget plan from source year to target year with optional coefficient",
        "operationId": "copy_budget_plan_api_v1_budget_plans_year__year__copy_from__source_year__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          },
          {
            "name": "source_year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Source Year"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyPlanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/plans/cell": {
      "patch": {
        "tags": [
          "Budget"
        ],
        "summary": "Update Budget Cell",
        "description": "Update a single budget plan cell (upsert)",
        "operationId": "update_budget_cell_api_v1_budget_plans_cell_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CellUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/budget/overview/{year}/{month}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Get Budget Overview",
        "description": "Get budget overview (plan vs actual) for specific month",
        "operationId": "get_budget_overview_api_v1_budget_overview__year___month__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Month"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/plans/year/{year}/export": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Export Budget Plan To Excel",
        "description": "Export budget plan for year to Excel file",
        "operationId": "export_budget_plan_to_excel_api_v1_budget_plans_year__year__export_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/overview/{year}/{month}/export": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Export Budget Overview To Excel",
        "description": "Export budget overview for specific month to Excel file",
        "operationId": "export_budget_overview_to_excel_api_v1_budget_overview__year___month__export_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Month"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/scenarios": {
      "get": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Get Scenarios",
        "description": "Get budget scenarios",
        "operationId": "get_scenarios_api_v1_budget_planning_scenarios_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by year",
              "title": "Year"
            },
            "description": "Filter by year"
          },
          {
            "name": "scenario_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BudgetScenarioTypeEnum"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by scenario type",
              "title": "Scenario Type"
            },
            "description": "Filter by scenario type"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetScenarioInDB"
                  },
                  "title": "Response Get Scenarios Api V1 Budget Planning Scenarios Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Create Scenario",
        "description": "Create a new budget scenario",
        "operationId": "create_scenario_api_v1_budget_planning_scenarios_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetScenarioCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetScenarioInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/scenarios/{scenario_id}": {
      "get": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Get Scenario",
        "description": "Get a specific scenario by ID",
        "operationId": "get_scenario_api_v1_budget_planning_scenarios__scenario_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Scenario Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetScenarioInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Update Scenario",
        "description": "Update a scenario",
        "operationId": "update_scenario_api_v1_budget_planning_scenarios__scenario_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Scenario Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetScenarioUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetScenarioInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Delete Scenario",
        "description": "Delete a scenario",
        "operationId": "delete_scenario_api_v1_budget_planning_scenarios__scenario_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Scenario Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/versions": {
      "get": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Get Versions",
        "description": "Get budget versions",
        "operationId": "get_versions_api_v1_budget_planning_versions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by year",
              "title": "Year"
            },
            "description": "Filter by year"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BudgetVersionStatusEnum"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status",
              "title": "Status"
            },
            "description": "Filter by status"
          },
          {
            "name": "scenario_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by scenario",
              "title": "Scenario Id"
            },
            "description": "Filter by scenario"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetVersionInDB"
                  },
                  "title": "Response Get Versions Api V1 Budget Planning Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Create Version",
        "description": "Create a new budget version",
        "operationId": "create_version_api_v1_budget_planning_versions_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetVersionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetVersionInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/versions/{version_id}": {
      "get": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Get Version",
        "description": "Get a specific version with optional details",
        "operationId": "get_version_api_v1_budget_planning_versions__version_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          },
          {
            "name": "include_details",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include plan details",
              "default": true,
              "title": "Include Details"
            },
            "description": "Include plan details"
          },
          {
            "name": "include_approval_logs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include approval logs",
              "default": true,
              "title": "Include Approval Logs"
            },
            "description": "Include approval logs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetVersionWithDetails"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Update Version",
        "description": "Update a version",
        "operationId": "update_version_api_v1_budget_planning_versions__version_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetVersionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetVersionInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Delete Version",
        "description": "Delete a version (and all its details via cascade)",
        "operationId": "delete_version_api_v1_budget_planning_versions__version_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/plan-details": {
      "get": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Get Plan Details",
        "description": "Get budget plan details with optional filters",
        "operationId": "get_plan_details_api_v1_budget_planning_plan_details_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by version ID",
              "title": "Version Id"
            },
            "description": "Filter by version ID"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category ID",
              "title": "Category Id"
            },
            "description": "Filter by category ID"
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 12,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by month",
              "title": "Month"
            },
            "description": "Filter by month"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetPlanDetailInDB"
                  },
                  "title": "Response Get Plan Details Api V1 Budget Planning Plan Details Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Create Plan Detail",
        "description": "Create a new plan detail",
        "operationId": "create_plan_detail_api_v1_budget_planning_plan_details_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetPlanDetailCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetPlanDetailInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/plan-details/{detail_id}": {
      "get": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Get Plan Detail",
        "description": "Get a specific plan detail by ID",
        "operationId": "get_plan_detail_api_v1_budget_planning_plan_details__detail_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "detail_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Detail Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetPlanDetailInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Update Plan Detail",
        "description": "Update a plan detail",
        "operationId": "update_plan_detail_api_v1_budget_planning_plan_details__detail_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "detail_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Detail Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetPlanDetailUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetPlanDetailInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Delete Plan Detail",
        "description": "Delete a plan detail",
        "operationId": "delete_plan_detail_api_v1_budget_planning_plan_details__detail_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "detail_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Detail Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/versions/{version_id}/submit": {
      "post": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Submit Version",
        "description": "Submit version for approval (DRAFT -> IN_REVIEW)",
        "operationId": "submit_version_api_v1_budget_planning_versions__version_id__submit_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetVersionInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/versions/{version_id}/approve": {
      "post": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Approve Version",
        "description": "Approve a submitted version (IN_REVIEW|REVISION_REQUESTED -> APPROVED)",
        "operationId": "approve_version_api_v1_budget_planning_versions__version_id__approve_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          },
          {
            "name": "comments",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Comments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetVersionInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/versions/{version_id}/reject": {
      "post": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Reject Version",
        "description": "Reject a submitted version (IN_REVIEW|REVISION_REQUESTED -> REJECTED)",
        "operationId": "reject_version_api_v1_budget_planning_versions__version_id__reject_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          },
          {
            "name": "comments",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetVersionInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/versions/{version_id}/request-changes": {
      "post": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Request Changes",
        "description": "Request changes to a submitted version (IN_REVIEW -> REVISION_REQUESTED)",
        "operationId": "request_changes_api_v1_budget_planning_versions__version_id__request_changes_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          },
          {
            "name": "comments",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetVersionInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/versions/compare": {
      "get": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Compare Versions",
        "description": "Compare two budget versions",
        "operationId": "compare_versions_api_v1_budget_planning_versions_compare_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "v1",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "First version ID",
              "title": "V1"
            },
            "description": "First version ID"
          },
          {
            "name": "v2",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Second version ID",
              "title": "V2"
            },
            "description": "Second version ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionComparisonResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/baseline/{category_id}": {
      "get": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Get Baseline",
        "description": "Get baseline data for a category from a specific year",
        "operationId": "get_baseline_api_v1_budget_planning_baseline__category_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Base year for calculation (e.g., 2025)",
              "title": "Year"
            },
            "description": "Base year for calculation (e.g., 2025)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaselineSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budget/planning/calculate/average": {
      "post": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Calculate By Average",
        "description": "Calculate budget using average method",
        "operationId": "calculate_by_average_api_v1_budget_planning_calculate_average_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateByAverageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculationResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/budget/planning/calculate/growth": {
      "post": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Calculate By Growth",
        "description": "Calculate budget using growth method",
        "operationId": "calculate_by_growth_api_v1_budget_planning_calculate_growth_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateByGrowthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculationResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/budget/planning/calculate/driver": {
      "post": {
        "tags": [
          "Budget Planning"
        ],
        "summary": "Calculate By Driver",
        "description": "Calculate budget using driver-based method",
        "operationId": "calculate_by_driver_api_v1_budget_planning_calculate_driver_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateByDriverRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculationResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/dashboard": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Dashboard Data",
        "description": "Get dashboard data with key metrics",
        "operationId": "get_dashboard_data_api_v1_analytics_dashboard_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/budget-execution": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Budget Execution",
        "description": "Get monthly budget execution for the year",
        "operationId": "get_budget_execution_api_v1_analytics_budget_execution_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/by-category": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Analytics By Category",
        "description": "Get detailed analytics by category",
        "operationId": "get_analytics_by_category_api_v1_analytics_by_category_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryAnalytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/trends": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Trends",
        "description": "Get spending trends over time",
        "operationId": "get_trends_api_v1_analytics_trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trends"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/payment-calendar": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Payment Calendar",
        "description": "Get payment calendar view for a specific month\nReturns daily aggregated payment data",
        "operationId": "get_payment_calendar_api_v1_analytics_payment_calendar_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Year for calendar",
              "title": "Year"
            },
            "description": "Year for calendar"
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 12,
              "minimum": 1,
              "description": "Month (1-12)",
              "title": "Month"
            },
            "description": "Month (1-12)"
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by department",
              "title": "Department Id"
            },
            "description": "Filter by department"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category Id"
            },
            "description": "Filter by category"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by organization",
              "title": "Organization Id"
            },
            "description": "Filter by organization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCalendar"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/payment-calendar/{date}": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Payments By Day",
        "description": "Get all payments for a specific day\nReturns detailed list of expenses",
        "operationId": "get_payments_by_day_api_v1_analytics_payment_calendar__date__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Date in ISO format (YYYY-MM-DD)",
              "title": "Date"
            },
            "description": "Date in ISO format (YYYY-MM-DD)"
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by department",
              "title": "Department Id"
            },
            "description": "Filter by department"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category Id"
            },
            "description": "Filter by category"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by organization",
              "title": "Organization Id"
            },
            "description": "Filter by organization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentsByDay"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/payment-forecast": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Payment Forecast",
        "description": "Generate payment forecast for future period\nMethods: simple_average, moving_average, seasonal",
        "operationId": "get_payment_forecast_api_v1_analytics_payment_forecast_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Start date in ISO format (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "Start date in ISO format (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "End date in ISO format (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "End date in ISO format (YYYY-MM-DD)"
          },
          {
            "name": "method",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "simple_average",
                "moving_average",
                "seasonal"
              ],
              "type": "string",
              "description": "Forecast method",
              "default": "simple_average",
              "title": "Method"
            },
            "description": "Forecast method"
          },
          {
            "name": "lookback_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 30,
              "description": "Days to look back for historical data",
              "default": 90,
              "title": "Lookback Days"
            },
            "description": "Days to look back for historical data"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category Id"
            },
            "description": "Filter by category"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by organization",
              "title": "Organization Id"
            },
            "description": "Filter by organization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentForecast"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/payment-forecast/summary": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Payment Forecast Summary",
        "description": "Get forecast summary comparing different methods",
        "operationId": "get_payment_forecast_summary_api_v1_analytics_payment_forecast_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Start date in ISO format (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "Start date in ISO format (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "End date in ISO format (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "End date in ISO format (YYYY-MM-DD)"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category Id"
            },
            "description": "Filter by category"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by organization",
              "title": "Organization Id"
            },
            "description": "Filter by organization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForecastSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forecast/generate": {
      "post": {
        "tags": [
          "Forecast"
        ],
        "summary": "Generate Forecast",
        "description": "Generate forecast for next month based on:\n1. Regular expenses (repeating monthly)\n2. Average of non-regular expenses",
        "operationId": "generate_forecast_api_v1_forecast_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateForecastRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Generate Forecast Api V1 Forecast Generate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/forecast/": {
      "get": {
        "tags": [
          "Forecast"
        ],
        "summary": "Get Forecasts",
        "description": "Get all forecasts for specified month and department",
        "operationId": "get_forecasts_api_v1_forecast__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Month"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ForecastExpenseInDB"
                  },
                  "title": "Response Get Forecasts Api V1 Forecast  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Forecast"
        ],
        "summary": "Create Forecast",
        "description": "Create new forecast expense",
        "operationId": "create_forecast_api_v1_forecast__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForecastExpenseCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForecastExpenseInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forecast/{forecast_id}": {
      "put": {
        "tags": [
          "Forecast"
        ],
        "summary": "Update Forecast",
        "description": "Update forecast expense",
        "operationId": "update_forecast_api_v1_forecast__forecast_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "forecast_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Forecast Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForecastExpenseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForecastExpenseInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Forecast"
        ],
        "summary": "Delete Forecast",
        "description": "Delete forecast expense",
        "operationId": "delete_forecast_api_v1_forecast__forecast_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "forecast_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Forecast Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forecast/clear/{year}/{month}": {
      "delete": {
        "tags": [
          "Forecast"
        ],
        "summary": "Clear Forecasts",
        "description": "Clear all forecasts for specified month and department",
        "operationId": "clear_forecasts_api_v1_forecast_clear__year___month__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Month"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forecast/export/{year}/{month}": {
      "get": {
        "tags": [
          "Forecast"
        ],
        "summary": "Export Forecast Calendar",
        "description": "Export forecast data as Excel calendar format using template\nDates in columns, categories/contractors in rows",
        "operationId": "export_forecast_calendar_api_v1_forecast_export__year___month__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Month"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by department",
              "title": "Department Id"
            },
            "description": "Filter by department"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/{expense_id}/attachments": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "summary": "Upload Attachment",
        "description": "Upload a file attachment for an expense",
        "operationId": "upload_attachment_api_v1_expenses__expense_id__attachments_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Expense Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_attachment_api_v1_expenses__expense_id__attachments_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Get Expense Attachments",
        "description": "Get all attachments for an expense",
        "operationId": "get_expense_attachments_api_v1_expenses__expense_id__attachments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Expense Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/attachments/{attachment_id}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Get Attachment",
        "description": "Get attachment by ID",
        "operationId": "get_attachment_api_v1_expenses_attachments__attachment_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attachment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Attachments"
        ],
        "summary": "Update Attachment",
        "description": "Update attachment metadata (filename or file_type)",
        "operationId": "update_attachment_api_v1_expenses_attachments__attachment_id__patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attachment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Attachments"
        ],
        "summary": "Delete Attachment",
        "description": "Delete an attachment",
        "operationId": "delete_attachment_api_v1_expenses_attachments__attachment_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attachment Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/attachments/{attachment_id}/download": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Download Attachment",
        "description": "Download an attachment file",
        "operationId": "download_attachment_api_v1_expenses_attachments__attachment_id__download_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attachment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboards": {
      "get": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Get Dashboards",
        "description": "Get all dashboard configurations",
        "operationId": "get_dashboards_api_v1_dashboards_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Public"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardConfigList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Create Dashboard",
        "description": "Create a new dashboard configuration",
        "operationId": "create_dashboard_api_v1_dashboards_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardConfigCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardConfigInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboards/{dashboard_id}": {
      "get": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Get Dashboard",
        "description": "Get dashboard configuration by ID",
        "operationId": "get_dashboard_api_v1_dashboards__dashboard_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dashboard Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardConfigInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Update Dashboard",
        "description": "Update dashboard configuration",
        "operationId": "update_dashboard_api_v1_dashboards__dashboard_id__patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dashboard Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardConfigUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardConfigInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Delete Dashboard",
        "description": "Delete dashboard configuration",
        "operationId": "delete_dashboard_api_v1_dashboards__dashboard_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dashboard Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboards/default/get": {
      "get": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Get Default Dashboard",
        "description": "Get default dashboard configuration",
        "operationId": "get_default_dashboard_api_v1_dashboards_default_get_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardConfigInDB"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/dashboards/{dashboard_id}/set-default": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Set Default Dashboard",
        "description": "Set a dashboard as default",
        "operationId": "set_default_dashboard_api_v1_dashboards__dashboard_id__set_default_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dashboard Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardConfigInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboards/{dashboard_id}/duplicate": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Duplicate Dashboard",
        "description": "Duplicate an existing dashboard",
        "operationId": "duplicate_dashboard_api_v1_dashboards__dashboard_id__duplicate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dashboard Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardConfigInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/expenses/by-department": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get Expenses By Department Report",
        "description": "Get expenses report grouped by department\n\nReturns summary statistics for each department:\n- Total expenses\n- Count of expenses\n- Average expense amount\n- OPEX vs CAPEX breakdown",
        "operationId": "get_expenses_by_department_report_api_v1_reports_expenses_by_department_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by year",
              "title": "Year"
            },
            "description": "Filter by year"
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 12,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by month",
              "title": "Month"
            },
            "description": "Filter by month"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category Id"
            },
            "description": "Filter by category"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExpenseStatusEnum"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status",
              "title": "Status"
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/budget/by-department": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get Budget By Department Report",
        "description": "Get budget vs actual report grouped by department\n\nReturns for each department:\n- Planned budget (OPEX/CAPEX)\n- Actual expenses (OPEX/CAPEX)\n- Variance (planned - actual)\n- Utilization percentage",
        "operationId": "get_budget_by_department_report_api_v1_reports_budget_by_department_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Year for budget report",
              "title": "Year"
            },
            "description": "Year for budget report"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/expenses/export-by-department": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Export Expenses By Department",
        "description": "Export expenses report by department to Excel",
        "operationId": "export_expenses_by_department_api_v1_reports_expenses_export_by_department_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by year",
              "title": "Year"
            },
            "description": "Filter by year"
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 12,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by month",
              "title": "Month"
            },
            "description": "Filter by month"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "List Employees",
        "description": "List all employees with filtering options\n\n- **ADMIN/MANAGER**: Can see all employees from all departments\n- **USER**: Can only see employees from their own department",
        "operationId": "list_employees_api_v1_employees__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EmployeeStatusEnum"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Filter"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInDB"
                  },
                  "title": "Response List Employees Api V1 Employees  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Create Employee",
        "description": "Create a new employee (ADMIN/MANAGER only)",
        "operationId": "create_employee_api_v1_employees__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employee_id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get Employee",
        "description": "Get a specific employee by ID with salary history",
        "operationId": "get_employee_api_v1_employees__employee_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Employee Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeWithSalaryHistory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "Update Employee",
        "description": "Update an employee (ADMIN/MANAGER only)",
        "operationId": "update_employee_api_v1_employees__employee_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Employee Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employees"
        ],
        "summary": "Delete Employee",
        "description": "Delete an employee (ADMIN only)",
        "operationId": "delete_employee_api_v1_employees__employee_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Employee Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employee_id}/salary-history": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get Salary History",
        "description": "Get salary history for an employee",
        "operationId": "get_salary_history_api_v1_employees__employee_id__salary_history_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Employee Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryHistoryInDB"
                  },
                  "title": "Response Get Salary History Api V1 Employees  Employee Id  Salary History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Add Salary History",
        "description": "Add a salary history record (ADMIN/MANAGER only)",
        "operationId": "add_salary_history_api_v1_employees__employee_id__salary_history_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Employee Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryHistoryCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryHistoryInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/export": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Export Employees",
        "description": "Export employees list to Excel",
        "operationId": "export_employees_api_v1_employees_export_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/plans": {
      "get": {
        "tags": [
          "Payroll"
        ],
        "summary": "List Payroll Plans",
        "description": "List all payroll plans with filtering options",
        "operationId": "list_payroll_plans_api_v1_payroll_plans_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Employee Id"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollPlanWithEmployee"
                  },
                  "title": "Response List Payroll Plans Api V1 Payroll Plans Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payroll"
        ],
        "summary": "Create Payroll Plan",
        "description": "Create a new payroll plan (ADMIN/MANAGER only)",
        "operationId": "create_payroll_plan_api_v1_payroll_plans_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollPlanCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollPlanInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/plans/{plan_id}": {
      "get": {
        "tags": [
          "Payroll"
        ],
        "summary": "Get Payroll Plan",
        "description": "Get a specific payroll plan by ID",
        "operationId": "get_payroll_plan_api_v1_payroll_plans__plan_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Plan Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollPlanWithEmployee"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Payroll"
        ],
        "summary": "Update Payroll Plan",
        "description": "Update a payroll plan (ADMIN/MANAGER only)",
        "operationId": "update_payroll_plan_api_v1_payroll_plans__plan_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Plan Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollPlanUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollPlanInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payroll"
        ],
        "summary": "Delete Payroll Plan",
        "description": "Delete a payroll plan (ADMIN only)",
        "operationId": "delete_payroll_plan_api_v1_payroll_plans__plan_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Plan Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/actuals": {
      "get": {
        "tags": [
          "Payroll"
        ],
        "summary": "List Payroll Actuals",
        "description": "List all payroll actuals with filtering options",
        "operationId": "list_payroll_actuals_api_v1_payroll_actuals_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Employee Id"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollActualWithEmployee"
                  },
                  "title": "Response List Payroll Actuals Api V1 Payroll Actuals Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payroll"
        ],
        "summary": "Create Payroll Actual",
        "description": "Create a new payroll actual (ADMIN/MANAGER only)",
        "operationId": "create_payroll_actual_api_v1_payroll_actuals_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollActualCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollActualInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/actuals/{actual_id}": {
      "put": {
        "tags": [
          "Payroll"
        ],
        "summary": "Update Payroll Actual",
        "description": "Update a payroll actual (ADMIN/MANAGER only)",
        "operationId": "update_payroll_actual_api_v1_payroll_actuals__actual_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "actual_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Actual Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollActualUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollActualInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payroll"
        ],
        "summary": "Delete Payroll Actual",
        "description": "Delete a payroll actual (ADMIN only)",
        "operationId": "delete_payroll_actual_api_v1_payroll_actuals__actual_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "actual_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Actual Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/analytics/summary": {
      "get": {
        "tags": [
          "Payroll"
        ],
        "summary": "Get Payroll Summary",
        "description": "Get payroll summary by month for a given year",
        "operationId": "get_payroll_summary_api_v1_payroll_analytics_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 2100,
              "minimum": 2000,
              "title": "Year"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollSummary"
                  },
                  "title": "Response Get Payroll Summary Api V1 Payroll Analytics Summary Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/plans/export": {
      "get": {
        "tags": [
          "Payroll"
        ],
        "summary": "Export Payroll Plans",
        "description": "Export payroll plans to Excel",
        "operationId": "export_payroll_plans_api_v1_payroll_plans_export_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/actuals/export": {
      "get": {
        "tags": [
          "Payroll"
        ],
        "summary": "Export Payroll Actuals",
        "description": "Export payroll actuals to Excel",
        "operationId": "export_payroll_actuals_api_v1_payroll_actuals_export_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/analytics/salary-stats": {
      "get": {
        "tags": [
          "Payroll"
        ],
        "summary": "Get Salary Statistics",
        "description": "Get salary distribution statistics including median and percentiles",
        "operationId": "get_salary_statistics_api_v1_payroll_analytics_salary_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryStatistics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/analytics/structure": {
      "get": {
        "tags": [
          "Payroll"
        ],
        "summary": "Get Payroll Structure",
        "description": "Get payroll structure breakdown by month (base salary vs bonus vs other payments)",
        "operationId": "get_payroll_structure_api_v1_payroll_analytics_structure_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 2100,
              "minimum": 2000,
              "title": "Year"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollStructureMonth"
                  },
                  "title": "Response Get Payroll Structure Api V1 Payroll Analytics Structure Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/analytics/dynamics": {
      "get": {
        "tags": [
          "Payroll"
        ],
        "summary": "Get Payroll Dynamics",
        "description": "Get payroll dynamics over time including plan vs actual breakdown",
        "operationId": "get_payroll_dynamics_api_v1_payroll_analytics_dynamics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 2100,
              "minimum": 2000,
              "title": "Year"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollDynamics"
                  },
                  "title": "Response Get Payroll Dynamics Api V1 Payroll Analytics Dynamics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/analytics/forecast": {
      "get": {
        "tags": [
          "Payroll"
        ],
        "summary": "Get Payroll Forecast",
        "description": "Get payroll forecast for future months based on historical data\n\nUses simple moving average with trend adjustment for forecasting",
        "operationId": "get_payroll_forecast_api_v1_payroll_analytics_forecast_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "months_ahead",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 12,
              "minimum": 1,
              "description": "Number of months to forecast",
              "default": 3,
              "title": "Months Ahead"
            },
            "description": "Number of months to forecast"
          },
          {
            "name": "historical_months",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 12,
              "minimum": 3,
              "description": "Number of historical months to use",
              "default": 6,
              "title": "Historical Months"
            },
            "description": "Number of historical months to use"
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollForecast"
                  },
                  "title": "Response Get Payroll Forecast Api V1 Payroll Analytics Forecast Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payroll/plans/import": {
      "post": {
        "tags": [
          "Payroll"
        ],
        "summary": "Import Payroll Plans",
        "description": "Import payroll plans from Excel file\n\nExpected columns:\n- Год (Year)\n- Месяц (Month)\n- Сотрудник (Employee full name)\n- Оклад (Base salary)\n- Премия (Bonus) - optional\n- Прочие выплаты (Other payments) - optional\n- Примечания (Notes) - optional\n\nOnly ADMIN and MANAGER can import payroll plans",
        "operationId": "import_payroll_plans_api_v1_payroll_plans_import_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_payroll_plans_api_v1_payroll_plans_import_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/kpi/goals": {
      "get": {
        "tags": [
          "KPI"
        ],
        "summary": "List Kpi Goals",
        "description": "List all KPI goals with filtering options",
        "operationId": "list_kpi_goals_api_v1_kpi_goals_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Year"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KPIGoalStatusEnum"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KPIGoalInDB"
                  },
                  "title": "Response List Kpi Goals Api V1 Kpi Goals Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "KPI"
        ],
        "summary": "Create Kpi Goal",
        "description": "Create a new KPI goal",
        "operationId": "create_kpi_goal_api_v1_kpi_goals_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KPIGoalCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KPIGoalInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kpi/goals/{goal_id}": {
      "get": {
        "tags": [
          "KPI"
        ],
        "summary": "Get Kpi Goal",
        "description": "Get a specific KPI goal by ID",
        "operationId": "get_kpi_goal_api_v1_kpi_goals__goal_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Goal Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KPIGoalInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "KPI"
        ],
        "summary": "Update Kpi Goal",
        "description": "Update a KPI goal",
        "operationId": "update_kpi_goal_api_v1_kpi_goals__goal_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Goal Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KPIGoalUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KPIGoalInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KPI"
        ],
        "summary": "Delete Kpi Goal",
        "description": "Delete a KPI goal",
        "operationId": "delete_kpi_goal_api_v1_kpi_goals__goal_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Goal Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kpi/employee-kpis": {
      "get": {
        "tags": [
          "KPI"
        ],
        "summary": "List Employee Kpis",
        "description": "List all employee KPIs with filtering options",
        "operationId": "list_employee_kpis_api_v1_kpi_employee_kpis_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Employee Id"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeKPIWithGoals"
                  },
                  "title": "Response List Employee Kpis Api V1 Kpi Employee Kpis Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "KPI"
        ],
        "summary": "Create Employee Kpi",
        "description": "Create a new employee KPI record",
        "operationId": "create_employee_kpi_api_v1_kpi_employee_kpis_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeKPICreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeKPIInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kpi/employee-kpis/{kpi_id}": {
      "get": {
        "tags": [
          "KPI"
        ],
        "summary": "Get Employee Kpi",
        "description": "Get a specific employee KPI by ID",
        "operationId": "get_employee_kpi_api_v1_kpi_employee_kpis__kpi_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "kpi_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Kpi Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeKPIWithGoals"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "KPI"
        ],
        "summary": "Update Employee Kpi",
        "description": "Update an employee KPI record",
        "operationId": "update_employee_kpi_api_v1_kpi_employee_kpis__kpi_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "kpi_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Kpi Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeKPIUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeKPIInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KPI"
        ],
        "summary": "Delete Employee Kpi",
        "description": "Delete an employee KPI record",
        "operationId": "delete_employee_kpi_api_v1_kpi_employee_kpis__kpi_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "kpi_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Kpi Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kpi/employee-kpi-goals": {
      "get": {
        "tags": [
          "KPI"
        ],
        "summary": "List Employee Kpi Goals",
        "description": "List all employee KPI goal assignments",
        "operationId": "list_employee_kpi_goals_api_v1_kpi_employee_kpi_goals_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Employee Id"
            }
          },
          {
            "name": "goal_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Goal Id"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KPIGoalStatusEnum"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeKPIGoalWithDetails"
                  },
                  "title": "Response List Employee Kpi Goals Api V1 Kpi Employee Kpi Goals Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "KPI"
        ],
        "summary": "Create Employee Kpi Goal",
        "description": "Assign a KPI goal to an employee",
        "operationId": "create_employee_kpi_goal_api_v1_kpi_employee_kpi_goals_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeKPIGoalCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeKPIGoalInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kpi/employee-kpi-goals/{assignment_id}": {
      "put": {
        "tags": [
          "KPI"
        ],
        "summary": "Update Employee Kpi Goal",
        "description": "Update an employee KPI goal assignment",
        "operationId": "update_employee_kpi_goal_api_v1_kpi_employee_kpi_goals__assignment_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Assignment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeKPIGoalUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeKPIGoalInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KPI"
        ],
        "summary": "Delete Employee Kpi Goal",
        "description": "Delete an employee KPI goal assignment",
        "operationId": "delete_employee_kpi_goal_api_v1_kpi_employee_kpi_goals__assignment_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Assignment Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kpi/analytics/employee-summary": {
      "get": {
        "tags": [
          "KPI"
        ],
        "summary": "Get Employee Kpi Summary",
        "description": "Get KPI summary for employees",
        "operationId": "get_employee_kpi_summary_api_v1_kpi_analytics_employee_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Month"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KPIEmployeeSummary"
                  },
                  "title": "Response Get Employee Kpi Summary Api V1 Kpi Analytics Employee Summary Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApprovalActionEnum": {
        "type": "string",
        "enum": [
          "SUBMITTED",
          "APPROVED",
          "REJECTED",
          "REVISION_REQUESTED"
        ],
        "title": "ApprovalActionEnum",
        "description": "Enum for approval actions"
      },
      "AttachmentInDB": {
        "properties": {
          "filename": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Filename"
          },
          "file_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "File Type"
          },
          "uploaded_by": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Uploaded By"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "expense_id": {
            "type": "integer",
            "title": "Expense Id"
          },
          "file_path": {
            "type": "string",
            "title": "File Path"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mime Type"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "id",
          "expense_id",
          "file_path",
          "file_size",
          "created_at",
          "updated_at"
        ],
        "title": "AttachmentInDB",
        "description": "Schema for attachment from database"
      },
      "AttachmentList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AttachmentInDB"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "AttachmentList",
        "description": "Schema for attachment list"
      },
      "AttachmentUpdate": {
        "properties": {
          "filename": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename"
          },
          "file_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "File Type"
          }
        },
        "type": "object",
        "title": "AttachmentUpdate",
        "description": "Schema for updating attachment"
      },
      "AuditActionEnum": {
        "type": "string",
        "enum": [
          "CREATE",
          "UPDATE",
          "DELETE",
          "LOGIN",
          "LOGOUT",
          "EXPORT",
          "IMPORT",
          "APPROVE",
          "REJECT"
        ],
        "title": "AuditActionEnum",
        "description": "Enum for audit log actions"
      },
      "AuditLogWithUser": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/AuditActionEnum"
          },
          "entity_type": {
            "type": "string",
            "title": "Entity Type"
          },
          "entity_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "changes": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Changes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "department_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "user_full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Full Name"
          }
        },
        "type": "object",
        "required": [
          "action",
          "entity_type",
          "id",
          "user_id",
          "ip_address",
          "user_agent",
          "department_id",
          "timestamp"
        ],
        "title": "AuditLogWithUser",
        "description": "Schema for audit log with user information"
      },
      "BaselineSummary": {
        "properties": {
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "category_name": {
            "type": "string",
            "title": "Category Name"
          },
          "total_amount": {
            "type": "string",
            "title": "Total Amount"
          },
          "monthly_avg": {
            "type": "string",
            "title": "Monthly Avg"
          },
          "monthly_breakdown": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Monthly Breakdown"
          },
          "capex_total": {
            "type": "string",
            "title": "Capex Total"
          },
          "opex_total": {
            "type": "string",
            "title": "Opex Total"
          }
        },
        "type": "object",
        "required": [
          "category_id",
          "category_name",
          "total_amount",
          "monthly_avg",
          "monthly_breakdown",
          "capex_total",
          "opex_total"
        ],
        "title": "BaselineSummary",
        "description": "Summary of baseline year (e.g., 2025) expenses"
      },
      "Body_import_categories_api_v1_categories_import_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_import_categories_api_v1_categories_import_post"
      },
      "Body_import_contractors_api_v1_contractors_import_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_import_contractors_api_v1_contractors_import_post"
      },
      "Body_import_organizations_api_v1_organizations_import_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_import_organizations_api_v1_organizations_import_post"
      },
      "Body_import_payroll_plans_api_v1_payroll_plans_import_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_import_payroll_plans_api_v1_payroll_plans_import_post"
      },
      "Body_upload_attachment_api_v1_expenses__expense_id__attachments_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "file_type": {
            "type": "string",
            "title": "File Type"
          },
          "uploaded_by": {
            "type": "string",
            "title": "Uploaded By"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_attachment_api_v1_expenses__expense_id__attachments_post"
      },
      "BonusTypeEnum": {
        "type": "string",
        "enum": [
          "PERFORMANCE_BASED",
          "FIXED",
          "MIXED"
        ],
        "title": "BonusTypeEnum",
        "description": "Enum for bonus calculation types"
      },
      "BudgetApprovalLogInDB": {
        "properties": {
          "version_id": {
            "type": "integer",
            "title": "Version Id"
          },
          "iteration_number": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Iteration Number",
            "description": "Approval round (1, 2, 3...)"
          },
          "reviewer_name": {
            "type": "string",
            "maxLength": 100,
            "title": "Reviewer Name"
          },
          "reviewer_role": {
            "type": "string",
            "maxLength": 50,
            "title": "Reviewer Role",
            "description": "CFO, CEO, Head of IT"
          },
          "action": {
            "$ref": "#/components/schemas/ApprovalActionEnum"
          },
          "decision_date": {
            "type": "string",
            "format": "date-time",
            "title": "Decision Date"
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          },
          "requested_changes": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested Changes"
          },
          "next_action": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Action"
          },
          "deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "version_id",
          "iteration_number",
          "reviewer_name",
          "reviewer_role",
          "action",
          "decision_date",
          "id",
          "created_at"
        ],
        "title": "BudgetApprovalLogInDB",
        "description": "Schema for budget approval log from database"
      },
      "BudgetCategoryCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/ExpenseTypeEnum"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "department_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "title": "BudgetCategoryCreate",
        "description": "Schema for creating budget category"
      },
      "BudgetCategoryInDB": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/ExpenseTypeEnum"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "id",
          "department_id",
          "created_at",
          "updated_at"
        ],
        "title": "BudgetCategoryInDB",
        "description": "Schema for budget category from database"
      },
      "BudgetCategoryUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExpenseTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          }
        },
        "type": "object",
        "title": "BudgetCategoryUpdate",
        "description": "Schema for updating budget category"
      },
      "BudgetPlanCreate": {
        "properties": {
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2020.0,
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "planned_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Planned Amount"
          },
          "capex_planned": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Capex Planned",
            "default": 0
          },
          "opex_planned": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Opex Planned",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "category_id",
          "planned_amount"
        ],
        "title": "BudgetPlanCreate",
        "description": "Schema for creating budget plan"
      },
      "BudgetPlanDetailCreate": {
        "properties": {
          "version_id": {
            "type": "integer",
            "title": "Version Id"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month",
            "description": "Month (1-12)"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Subcategory"
          },
          "planned_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Planned Amount",
            "description": "Planned amount"
          },
          "type": {
            "$ref": "#/components/schemas/ExpenseTypeEnum"
          },
          "calculation_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CalculationMethodEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "calculation_params": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Calculation Params"
          },
          "business_driver": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Driver"
          },
          "justification": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Justification"
          },
          "based_on_year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Based On Year"
          },
          "based_on_avg": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Based On Avg"
          },
          "based_on_total": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Based On Total"
          },
          "growth_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Growth Rate"
          }
        },
        "type": "object",
        "required": [
          "version_id",
          "month",
          "category_id",
          "planned_amount",
          "type"
        ],
        "title": "BudgetPlanDetailCreate",
        "description": "Schema for creating budget plan detail"
      },
      "BudgetPlanDetailInDB": {
        "properties": {
          "version_id": {
            "type": "integer",
            "title": "Version Id"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month",
            "description": "Month (1-12)"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Subcategory"
          },
          "planned_amount": {
            "type": "string",
            "title": "Planned Amount",
            "description": "Planned amount"
          },
          "type": {
            "$ref": "#/components/schemas/ExpenseTypeEnum"
          },
          "calculation_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CalculationMethodEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "calculation_params": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Calculation Params"
          },
          "business_driver": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Driver"
          },
          "justification": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Justification"
          },
          "based_on_year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Based On Year"
          },
          "based_on_avg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Based On Avg"
          },
          "based_on_total": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Based On Total"
          },
          "growth_rate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Growth Rate"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "version_id",
          "month",
          "category_id",
          "planned_amount",
          "type",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "BudgetPlanDetailInDB",
        "description": "Schema for budget plan detail from database"
      },
      "BudgetPlanDetailUpdate": {
        "properties": {
          "month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 12.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Month"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Subcategory"
          },
          "planned_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned Amount"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExpenseTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "calculation_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CalculationMethodEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "calculation_params": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Calculation Params"
          },
          "business_driver": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Driver"
          },
          "justification": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Justification"
          },
          "based_on_year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Based On Year"
          },
          "based_on_avg": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Based On Avg"
          },
          "based_on_total": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Based On Total"
          },
          "growth_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Growth Rate"
          }
        },
        "type": "object",
        "title": "BudgetPlanDetailUpdate",
        "description": "Schema for updating budget plan detail"
      },
      "BudgetPlanInDB": {
        "properties": {
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2020.0,
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "planned_amount": {
            "type": "string",
            "title": "Planned Amount"
          },
          "capex_planned": {
            "type": "string",
            "title": "Capex Planned",
            "default": 0
          },
          "opex_planned": {
            "type": "string",
            "title": "Opex Planned",
            "default": 0
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "status": {
            "$ref": "#/components/schemas/BudgetStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "category_id",
          "planned_amount",
          "id",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "BudgetPlanInDB",
        "description": "Schema for budget plan from database"
      },
      "BudgetPlanUpdate": {
        "properties": {
          "year": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2100.0,
                "minimum": 2020.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Year"
          },
          "month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 12.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Month"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "planned_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned Amount"
          },
          "capex_planned": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Capex Planned"
          },
          "opex_planned": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Opex Planned"
          }
        },
        "type": "object",
        "title": "BudgetPlanUpdate",
        "description": "Schema for updating budget plan"
      },
      "BudgetScenarioCreate": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year",
            "description": "Planning year (e.g., 2026)"
          },
          "scenario_name": {
            "type": "string",
            "maxLength": 100,
            "title": "Scenario Name",
            "description": "Scenario name"
          },
          "scenario_type": {
            "$ref": "#/components/schemas/BudgetScenarioTypeEnum"
          },
          "global_growth_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Global Growth Rate",
            "description": "Global growth rate %",
            "default": "0"
          },
          "inflation_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Inflation Rate",
            "description": "Inflation rate %",
            "default": "0"
          },
          "fx_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fx Rate",
            "description": "FX rate for imports"
          },
          "assumptions": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assumptions",
            "description": "Business assumptions (JSON)"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "year",
          "scenario_name",
          "scenario_type"
        ],
        "title": "BudgetScenarioCreate",
        "description": "Schema for creating budget scenario - department_id auto-assigned from current_user"
      },
      "BudgetScenarioInDB": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year",
            "description": "Planning year (e.g., 2026)"
          },
          "scenario_name": {
            "type": "string",
            "maxLength": 100,
            "title": "Scenario Name",
            "description": "Scenario name"
          },
          "scenario_type": {
            "$ref": "#/components/schemas/BudgetScenarioTypeEnum"
          },
          "global_growth_rate": {
            "type": "string",
            "title": "Global Growth Rate",
            "description": "Global growth rate %",
            "default": "0"
          },
          "inflation_rate": {
            "type": "string",
            "title": "Inflation Rate",
            "description": "Inflation rate %",
            "default": "0"
          },
          "fx_rate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fx Rate",
            "description": "FX rate for imports"
          },
          "assumptions": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assumptions",
            "description": "Business assumptions (JSON)"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "year",
          "scenario_name",
          "scenario_type",
          "id",
          "department_id",
          "created_at",
          "created_by"
        ],
        "title": "BudgetScenarioInDB",
        "description": "Schema for budget scenario from database"
      },
      "BudgetScenarioTypeEnum": {
        "type": "string",
        "enum": [
          "BASE",
          "OPTIMISTIC",
          "PESSIMISTIC"
        ],
        "title": "BudgetScenarioTypeEnum",
        "description": "Enum for budget scenario types"
      },
      "BudgetScenarioUpdate": {
        "properties": {
          "scenario_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Scenario Name"
          },
          "global_growth_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Global Growth Rate"
          },
          "inflation_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inflation Rate"
          },
          "fx_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fx Rate"
          },
          "assumptions": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assumptions"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "BudgetScenarioUpdate",
        "description": "Schema for updating budget scenario"
      },
      "BudgetStatusEnum": {
        "type": "string",
        "enum": [
          "DRAFT",
          "APPROVED"
        ],
        "title": "BudgetStatusEnum",
        "description": "Enum for budget plan statuses"
      },
      "BudgetVersionCreate": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year",
            "description": "Planning year (e.g., 2026)"
          },
          "version_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Name",
            "description": "Version name"
          },
          "scenario_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scenario Id"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BudgetVersionStatusEnum"
              }
            ],
            "default": "DRAFT"
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          },
          "change_log": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Change Log"
          },
          "copy_from_version_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Copy From Version Id",
            "description": "Copy from existing version"
          },
          "auto_calculate": {
            "type": "boolean",
            "title": "Auto Calculate",
            "description": "Auto-calculate from previous year",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "year"
        ],
        "title": "BudgetVersionCreate",
        "description": "Schema for creating budget version - department_id auto-assigned from current_user, version_number auto-incremented"
      },
      "BudgetVersionInDB": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year",
            "description": "Planning year (e.g., 2026)"
          },
          "version_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Name",
            "description": "Version name"
          },
          "scenario_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scenario Id"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BudgetVersionStatusEnum"
              }
            ],
            "default": "DRAFT"
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          },
          "change_log": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Change Log"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "submitted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submitted At"
          },
          "approved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approved At"
          },
          "approved_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approved By"
          },
          "total_amount": {
            "type": "string",
            "title": "Total Amount"
          },
          "total_capex": {
            "type": "string",
            "title": "Total Capex"
          },
          "total_opex": {
            "type": "string",
            "title": "Total Opex"
          }
        },
        "type": "object",
        "required": [
          "year",
          "id",
          "version_number",
          "department_id",
          "created_by",
          "created_at",
          "updated_at",
          "submitted_at",
          "approved_at",
          "approved_by",
          "total_amount",
          "total_capex",
          "total_opex"
        ],
        "title": "BudgetVersionInDB",
        "description": "Schema for budget version from database"
      },
      "BudgetVersionStatusEnum": {
        "type": "string",
        "enum": [
          "DRAFT",
          "IN_REVIEW",
          "REVISION_REQUESTED",
          "APPROVED",
          "REJECTED",
          "ARCHIVED"
        ],
        "title": "BudgetVersionStatusEnum",
        "description": "Enum for budget version statuses (planning 2026 workflow)"
      },
      "BudgetVersionUpdate": {
        "properties": {
          "version_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Name"
          },
          "scenario_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scenario Id"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BudgetVersionStatusEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          },
          "change_log": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Change Log"
          },
          "submitted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submitted At"
          },
          "approved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approved At"
          },
          "approved_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approved By"
          }
        },
        "type": "object",
        "title": "BudgetVersionUpdate",
        "description": "Schema for updating budget version"
      },
      "BudgetVersionWithDetails": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year",
            "description": "Planning year (e.g., 2026)"
          },
          "version_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Name",
            "description": "Version name"
          },
          "scenario_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scenario Id"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BudgetVersionStatusEnum"
              }
            ],
            "default": "DRAFT"
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          },
          "change_log": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Change Log"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "submitted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submitted At"
          },
          "approved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approved At"
          },
          "approved_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approved By"
          },
          "total_amount": {
            "type": "string",
            "title": "Total Amount"
          },
          "total_capex": {
            "type": "string",
            "title": "Total Capex"
          },
          "total_opex": {
            "type": "string",
            "title": "Total Opex"
          },
          "plan_details": {
            "items": {
              "$ref": "#/components/schemas/BudgetPlanDetailInDB"
            },
            "type": "array",
            "title": "Plan Details",
            "default": []
          },
          "scenario": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BudgetScenarioInDB"
              },
              {
                "type": "null"
              }
            ]
          },
          "approval_logs": {
            "items": {
              "$ref": "#/components/schemas/BudgetApprovalLogInDB"
            },
            "type": "array",
            "title": "Approval Logs",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "year",
          "id",
          "version_number",
          "department_id",
          "created_by",
          "created_at",
          "updated_at",
          "submitted_at",
          "approved_at",
          "approved_by",
          "total_amount",
          "total_capex",
          "total_opex"
        ],
        "title": "BudgetVersionWithDetails",
        "description": "Schema for budget version with plan details"
      },
      "CalculateByAverageRequest": {
        "properties": {
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "base_year": {
            "type": "integer",
            "title": "Base Year",
            "description": "Base year for calculation (e.g., 2025)"
          },
          "adjustment_percent": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Adjustment Percent",
            "description": "Adjustment % (inflation, growth)",
            "default": "0"
          },
          "target_year": {
            "type": "integer",
            "title": "Target Year",
            "description": "Target year (e.g., 2026)"
          }
        },
        "type": "object",
        "required": [
          "category_id",
          "base_year",
          "target_year"
        ],
        "title": "CalculateByAverageRequest",
        "description": "Request schema for calculate by average method - department_id auto-assigned from current_user"
      },
      "CalculateByDriverRequest": {
        "properties": {
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "base_year": {
            "type": "integer",
            "title": "Base Year"
          },
          "driver_type": {
            "type": "string",
            "title": "Driver Type",
            "description": "Driver type: headcount, projects, revenue, etc"
          },
          "base_driver_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Base Driver Value",
            "description": "Driver value in base year"
          },
          "planned_driver_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Planned Driver Value",
            "description": "Planned driver value for target year"
          },
          "cost_per_unit": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Per Unit",
            "description": "Cost per driver unit (optional, will calculate if not provided)"
          },
          "adjustment_percent": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Adjustment Percent",
            "description": "Additional adjustment %",
            "default": "0"
          },
          "target_year": {
            "type": "integer",
            "title": "Target Year"
          }
        },
        "type": "object",
        "required": [
          "category_id",
          "base_year",
          "driver_type",
          "base_driver_value",
          "planned_driver_value",
          "target_year"
        ],
        "title": "CalculateByDriverRequest",
        "description": "Request schema for calculate by driver method - department_id auto-assigned from current_user"
      },
      "CalculateByGrowthRequest": {
        "properties": {
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "base_year": {
            "type": "integer",
            "title": "Base Year"
          },
          "growth_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Growth Rate",
            "description": "Growth rate %"
          },
          "inflation_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Inflation Rate",
            "description": "Inflation rate %",
            "default": "0"
          },
          "target_year": {
            "type": "integer",
            "title": "Target Year"
          }
        },
        "type": "object",
        "required": [
          "category_id",
          "base_year",
          "growth_rate",
          "target_year"
        ],
        "title": "CalculateByGrowthRequest",
        "description": "Request schema for calculate by growth method - department_id auto-assigned from current_user"
      },
      "CalculationMethodEnum": {
        "type": "string",
        "enum": [
          "AVERAGE",
          "GROWTH",
          "DRIVER_BASED",
          "SEASONAL",
          "MANUAL"
        ],
        "title": "CalculationMethodEnum",
        "description": "Enum for budget calculation methods"
      },
      "CalculationResult": {
        "properties": {
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "annual_total": {
            "type": "string",
            "title": "Annual Total"
          },
          "monthly_avg": {
            "type": "string",
            "title": "Monthly Avg"
          },
          "growth_percent": {
            "type": "string",
            "title": "Growth Percent"
          },
          "monthly_breakdown": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Monthly Breakdown",
            "description": "Monthly breakdown: [{'month': 1, 'amount': 560000}, ...]"
          },
          "calculation_method": {
            "$ref": "#/components/schemas/CalculationMethodEnum"
          },
          "calculation_params": {
            "type": "object",
            "title": "Calculation Params"
          },
          "based_on_total": {
            "type": "string",
            "title": "Based On Total"
          },
          "based_on_avg": {
            "type": "string",
            "title": "Based On Avg"
          }
        },
        "type": "object",
        "required": [
          "category_id",
          "annual_total",
          "monthly_avg",
          "growth_percent",
          "monthly_breakdown",
          "calculation_method",
          "calculation_params",
          "based_on_total",
          "based_on_avg"
        ],
        "title": "CalculationResult",
        "description": "Response schema for calculation results"
      },
      "CategoryAnalytics": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "month": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Month"
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/CategoryAnalyticsItem"
            },
            "type": "array",
            "title": "Categories"
          }
        },
        "type": "object",
        "required": [
          "year",
          "categories"
        ],
        "title": "CategoryAnalytics"
      },
      "CategoryAnalyticsItem": {
        "properties": {
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "category_name": {
            "type": "string",
            "title": "Category Name"
          },
          "category_type": {
            "type": "string",
            "title": "Category Type"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "planned": {
            "type": "number",
            "title": "Planned"
          },
          "actual": {
            "type": "number",
            "title": "Actual"
          },
          "remaining": {
            "type": "number",
            "title": "Remaining"
          },
          "execution_percent": {
            "type": "number",
            "title": "Execution Percent"
          },
          "expense_count": {
            "type": "integer",
            "title": "Expense Count"
          }
        },
        "type": "object",
        "required": [
          "category_id",
          "category_name",
          "category_type",
          "parent_id",
          "planned",
          "actual",
          "remaining",
          "execution_percent",
          "expense_count"
        ],
        "title": "CategoryAnalyticsItem"
      },
      "CellUpdateRequest": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "title": "Month"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "planned_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Planned Amount"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "category_id",
          "planned_amount"
        ],
        "title": "CellUpdateRequest",
        "description": "Request to update a single budget cell"
      },
      "ContractorCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Name"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Name"
          },
          "inn": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Inn"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "department_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ContractorCreate",
        "description": "Schema for creating contractor"
      },
      "ContractorInDB": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Name"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Name"
          },
          "inn": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Inn"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "department_id",
          "created_at",
          "updated_at"
        ],
        "title": "ContractorInDB",
        "description": "Schema for contractor from database"
      },
      "ContractorUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Name"
          },
          "inn": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Inn"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "ContractorUpdate",
        "description": "Schema for updating contractor"
      },
      "CopyPlanRequest": {
        "properties": {
          "coefficient": {
            "type": "number",
            "title": "Coefficient",
            "default": 1.0
          }
        },
        "type": "object",
        "title": "CopyPlanRequest",
        "description": "Request to copy budget plan from another year"
      },
      "DashboardByCategoryItem": {
        "properties": {
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "category_name": {
            "type": "string",
            "title": "Category Name"
          },
          "planned": {
            "type": "number",
            "title": "Planned"
          },
          "actual": {
            "type": "number",
            "title": "Actual"
          },
          "remaining": {
            "type": "number",
            "title": "Remaining"
          }
        },
        "type": "object",
        "required": [
          "category_id",
          "category_name",
          "planned",
          "actual",
          "remaining"
        ],
        "title": "DashboardByCategoryItem"
      },
      "DashboardByMonthItem": {
        "properties": {
          "month": {
            "type": "integer",
            "title": "Month"
          },
          "planned": {
            "type": "number",
            "title": "Planned"
          },
          "actual": {
            "type": "number",
            "title": "Actual"
          },
          "remaining": {
            "type": "number",
            "title": "Remaining"
          }
        },
        "type": "object",
        "required": [
          "month",
          "planned",
          "actual",
          "remaining"
        ],
        "title": "DashboardByMonthItem"
      },
      "DashboardCapexVsOpex": {
        "properties": {
          "capex": {
            "type": "number",
            "title": "Capex"
          },
          "opex": {
            "type": "number",
            "title": "Opex"
          },
          "capex_percent": {
            "type": "number",
            "title": "Capex Percent"
          },
          "opex_percent": {
            "type": "number",
            "title": "Opex Percent"
          }
        },
        "type": "object",
        "required": [
          "capex",
          "opex",
          "capex_percent",
          "opex_percent"
        ],
        "title": "DashboardCapexVsOpex"
      },
      "DashboardConfigCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "default": false
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "config": {
            "type": "object",
            "title": "Config",
            "description": "Dashboard layout and widgets configuration"
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "DashboardConfigCreate",
        "description": "Schema for creating dashboard configuration"
      },
      "DashboardConfigInDB": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "default": false
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "config": {
            "type": "object",
            "title": "Config",
            "description": "Dashboard layout and widgets configuration"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "config",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "DashboardConfigInDB",
        "description": "Schema for dashboard configuration from database"
      },
      "DashboardConfigList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/DashboardConfigInDB"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "DashboardConfigList",
        "description": "Schema for dashboard configuration list"
      },
      "DashboardConfigUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_default": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Default"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          }
        },
        "type": "object",
        "title": "DashboardConfigUpdate",
        "description": "Schema for updating dashboard configuration"
      },
      "DashboardData": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "month": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Month"
          },
          "totals": {
            "$ref": "#/components/schemas/DashboardTotals"
          },
          "capex_vs_opex": {
            "$ref": "#/components/schemas/DashboardCapexVsOpex"
          },
          "status_distribution": {
            "items": {
              "$ref": "#/components/schemas/DashboardStatusDistribution"
            },
            "type": "array",
            "title": "Status Distribution"
          },
          "top_categories": {
            "items": {
              "$ref": "#/components/schemas/DashboardTopCategory"
            },
            "type": "array",
            "title": "Top Categories"
          },
          "recent_expenses": {
            "items": {
              "$ref": "#/components/schemas/DashboardRecentExpense"
            },
            "type": "array",
            "title": "Recent Expenses"
          },
          "by_month": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DashboardByMonthItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "By Month"
          },
          "by_category": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DashboardByCategoryItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "By Category"
          }
        },
        "type": "object",
        "required": [
          "year",
          "totals",
          "capex_vs_opex",
          "status_distribution",
          "top_categories",
          "recent_expenses"
        ],
        "title": "DashboardData"
      },
      "DashboardRecentExpense": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "number": {
            "type": "string",
            "title": "Number"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "request_date": {
            "type": "string",
            "title": "Request Date"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "number",
          "amount",
          "status",
          "request_date",
          "category_id"
        ],
        "title": "DashboardRecentExpense"
      },
      "DashboardStatusDistribution": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          }
        },
        "type": "object",
        "required": [
          "status",
          "count",
          "amount"
        ],
        "title": "DashboardStatusDistribution"
      },
      "DashboardTopCategory": {
        "properties": {
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "category_name": {
            "type": "string",
            "title": "Category Name"
          },
          "category_type": {
            "type": "string",
            "title": "Category Type"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          }
        },
        "type": "object",
        "required": [
          "category_id",
          "category_name",
          "category_type",
          "amount"
        ],
        "title": "DashboardTopCategory"
      },
      "DashboardTotals": {
        "properties": {
          "planned": {
            "type": "number",
            "title": "Planned"
          },
          "actual": {
            "type": "number",
            "title": "Actual"
          },
          "remaining": {
            "type": "number",
            "title": "Remaining"
          },
          "execution_percent": {
            "type": "number",
            "title": "Execution Percent"
          }
        },
        "type": "object",
        "required": [
          "planned",
          "actual",
          "remaining",
          "execution_percent"
        ],
        "title": "DashboardTotals"
      },
      "Department": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 2,
            "title": "Name"
          },
          "code": {
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "title": "Code"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "ftp_subdivision_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Ftp Subdivision Name",
            "description": "Название подразделения из FTP для сопоставления"
          },
          "manager_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manager Name"
          },
          "contact_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Email"
          },
          "contact_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Phone"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "code",
          "id",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "Department",
        "description": "Schema for department response"
      },
      "DepartmentCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 2,
            "title": "Name"
          },
          "code": {
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "title": "Code"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "ftp_subdivision_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Ftp Subdivision Name",
            "description": "Название подразделения из FTP для сопоставления"
          },
          "manager_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manager Name"
          },
          "contact_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Email"
          },
          "contact_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Phone"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "code"
        ],
        "title": "DepartmentCreate",
        "description": "Schema for creating a new department"
      },
      "DepartmentListItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "ftp_subdivision_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ftp Subdivision Name"
          },
          "manager_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manager Name"
          },
          "contact_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Email"
          },
          "contact_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Phone"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "code",
          "is_active"
        ],
        "title": "DepartmentListItem",
        "description": "Schema for department in list view"
      },
      "DepartmentUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "ftp_subdivision_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Ftp Subdivision Name",
            "description": "Название подразделения из FTP для сопоставления"
          },
          "manager_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manager Name"
          },
          "contact_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Email"
          },
          "contact_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Phone"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "DepartmentUpdate",
        "description": "Schema for updating department information"
      },
      "DepartmentWithStats": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 2,
            "title": "Name"
          },
          "code": {
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "title": "Code"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "ftp_subdivision_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Ftp Subdivision Name",
            "description": "Название подразделения из FTP для сопоставления"
          },
          "manager_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manager Name"
          },
          "contact_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Email"
          },
          "contact_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Phone"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "users_count": {
            "type": "integer",
            "title": "Users Count",
            "default": 0
          },
          "expenses_count": {
            "type": "integer",
            "title": "Expenses Count",
            "default": 0
          },
          "total_budget": {
            "type": "number",
            "title": "Total Budget",
            "default": 0.0
          }
        },
        "type": "object",
        "required": [
          "name",
          "code",
          "id",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "DepartmentWithStats",
        "description": "Schema for department with statistics"
      },
      "EmployeeCreate": {
        "properties": {
          "full_name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Full Name"
          },
          "position": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Position"
          },
          "employee_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Number"
          },
          "hire_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hire Date"
          },
          "fire_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fire Date"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployeeStatusEnum"
              }
            ],
            "default": "ACTIVE"
          },
          "base_salary": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Base Salary"
          },
          "monthly_bonus_base": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Monthly Bonus Base",
            "description": "Базовая месячная премия",
            "default": 0
          },
          "quarterly_bonus_base": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Base",
            "description": "Базовая квартальная премия (опционально)"
          },
          "annual_bonus_base": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Base",
            "description": "Базовая годовая премия (опционально)"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "full_name",
          "position",
          "base_salary"
        ],
        "title": "EmployeeCreate",
        "description": "Schema for creating employee - department_id auto-assigned from current_user"
      },
      "EmployeeInDB": {
        "properties": {
          "full_name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Full Name"
          },
          "position": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Position"
          },
          "employee_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Number"
          },
          "hire_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hire Date"
          },
          "fire_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fire Date"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployeeStatusEnum"
              }
            ],
            "default": "ACTIVE"
          },
          "base_salary": {
            "type": "string",
            "title": "Base Salary"
          },
          "monthly_bonus_base": {
            "type": "string",
            "title": "Monthly Bonus Base",
            "description": "Базовая месячная премия",
            "default": 0
          },
          "quarterly_bonus_base": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Base",
            "description": "Базовая квартальная премия (опционально)"
          },
          "annual_bonus_base": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Base",
            "description": "Базовая годовая премия (опционально)"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "full_name",
          "position",
          "base_salary",
          "id",
          "department_id",
          "created_at",
          "updated_at"
        ],
        "title": "EmployeeInDB",
        "description": "Schema for employee in database"
      },
      "EmployeeKPICreate": {
        "properties": {
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2020.0,
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month"
          },
          "kpi_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kpi Percentage",
            "description": "КПИ% (0-200)"
          },
          "monthly_bonus_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              }
            ],
            "default": "PERFORMANCE_BASED"
          },
          "quarterly_bonus_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              }
            ],
            "default": "PERFORMANCE_BASED"
          },
          "annual_bonus_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              }
            ],
            "default": "PERFORMANCE_BASED"
          },
          "monthly_bonus_base": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Monthly Bonus Base",
            "default": 0
          },
          "quarterly_bonus_base": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Quarterly Bonus Base",
            "default": 0
          },
          "annual_bonus_base": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Annual Bonus Base",
            "default": 0
          },
          "monthly_bonus_calculated": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus Calculated"
          },
          "quarterly_bonus_calculated": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Calculated"
          },
          "annual_bonus_calculated": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Calculated"
          },
          "monthly_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus Fixed Part"
          },
          "quarterly_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Fixed Part"
          },
          "annual_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Fixed Part"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "employee_id",
          "year",
          "month",
          "department_id"
        ],
        "title": "EmployeeKPICreate",
        "description": "Schema for creating employee KPI"
      },
      "EmployeeKPIGoalCreate": {
        "properties": {
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "goal_id": {
            "type": "integer",
            "title": "Goal Id"
          },
          "employee_kpi_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Kpi Id"
          },
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2020.0,
            "title": "Year"
          },
          "month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 12.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Month",
            "description": "Null для годовых целей"
          },
          "target_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Value"
          },
          "actual_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Value"
          },
          "achievement_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Achievement Percentage",
            "description": "% выполнения"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KPIGoalStatusEnum"
              }
            ],
            "default": "ACTIVE"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "employee_id",
          "goal_id",
          "year"
        ],
        "title": "EmployeeKPIGoalCreate",
        "description": "Schema for creating employee KPI goal"
      },
      "EmployeeKPIGoalInDB": {
        "properties": {
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "goal_id": {
            "type": "integer",
            "title": "Goal Id"
          },
          "employee_kpi_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Kpi Id"
          },
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2020.0,
            "title": "Year"
          },
          "month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 12.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Month",
            "description": "Null для годовых целей"
          },
          "target_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Value"
          },
          "actual_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Value"
          },
          "achievement_percentage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Achievement Percentage",
            "description": "% выполнения"
          },
          "weight": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KPIGoalStatusEnum"
              }
            ],
            "default": "ACTIVE"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "employee_id",
          "goal_id",
          "year",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "EmployeeKPIGoalInDB",
        "description": "Schema for employee KPI goal in database"
      },
      "EmployeeKPIGoalUpdate": {
        "properties": {
          "employee_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Id"
          },
          "goal_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Goal Id"
          },
          "employee_kpi_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Kpi Id"
          },
          "year": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2100.0,
                "minimum": 2020.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Year"
          },
          "month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 12.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Month"
          },
          "target_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Value"
          },
          "actual_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Value"
          },
          "achievement_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Achievement Percentage"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/KPIGoalStatusEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "EmployeeKPIGoalUpdate",
        "description": "Schema for updating employee KPI goal"
      },
      "EmployeeKPIGoalWithDetails": {
        "properties": {
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "goal_id": {
            "type": "integer",
            "title": "Goal Id"
          },
          "employee_kpi_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Kpi Id"
          },
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2020.0,
            "title": "Year"
          },
          "month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 12.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Month",
            "description": "Null для годовых целей"
          },
          "target_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Value"
          },
          "actual_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Value"
          },
          "achievement_percentage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Achievement Percentage",
            "description": "% выполнения"
          },
          "weight": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KPIGoalStatusEnum"
              }
            ],
            "default": "ACTIVE"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "goal": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/KPIGoalInDB"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "employee_id",
          "goal_id",
          "year",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "EmployeeKPIGoalWithDetails",
        "description": "Employee KPI goal with goal details"
      },
      "EmployeeKPIInDB": {
        "properties": {
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2020.0,
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month"
          },
          "kpi_percentage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kpi Percentage",
            "description": "КПИ% (0-200)"
          },
          "monthly_bonus_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              }
            ],
            "default": "PERFORMANCE_BASED"
          },
          "quarterly_bonus_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              }
            ],
            "default": "PERFORMANCE_BASED"
          },
          "annual_bonus_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              }
            ],
            "default": "PERFORMANCE_BASED"
          },
          "monthly_bonus_base": {
            "type": "string",
            "title": "Monthly Bonus Base",
            "default": 0
          },
          "quarterly_bonus_base": {
            "type": "string",
            "title": "Quarterly Bonus Base",
            "default": 0
          },
          "annual_bonus_base": {
            "type": "string",
            "title": "Annual Bonus Base",
            "default": 0
          },
          "monthly_bonus_calculated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus Calculated"
          },
          "quarterly_bonus_calculated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Calculated"
          },
          "annual_bonus_calculated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Calculated"
          },
          "monthly_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus Fixed Part"
          },
          "quarterly_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Fixed Part"
          },
          "annual_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Fixed Part"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "employee_id",
          "year",
          "month",
          "department_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "EmployeeKPIInDB",
        "description": "Schema for employee KPI in database"
      },
      "EmployeeKPIUpdate": {
        "properties": {
          "employee_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Id"
          },
          "year": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2100.0,
                "minimum": 2020.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Year"
          },
          "month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 12.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Month"
          },
          "kpi_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kpi Percentage"
          },
          "monthly_bonus_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "quarterly_bonus_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "annual_bonus_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "monthly_bonus_base": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus Base"
          },
          "quarterly_bonus_base": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Base"
          },
          "annual_bonus_base": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Base"
          },
          "monthly_bonus_calculated": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus Calculated"
          },
          "quarterly_bonus_calculated": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Calculated"
          },
          "annual_bonus_calculated": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Calculated"
          },
          "monthly_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus Fixed Part"
          },
          "quarterly_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Fixed Part"
          },
          "annual_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Fixed Part"
          },
          "department_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "EmployeeKPIUpdate",
        "description": "Schema for updating employee KPI"
      },
      "EmployeeKPIWithGoals": {
        "properties": {
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2020.0,
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month"
          },
          "kpi_percentage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kpi Percentage",
            "description": "КПИ% (0-200)"
          },
          "monthly_bonus_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              }
            ],
            "default": "PERFORMANCE_BASED"
          },
          "quarterly_bonus_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              }
            ],
            "default": "PERFORMANCE_BASED"
          },
          "annual_bonus_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BonusTypeEnum"
              }
            ],
            "default": "PERFORMANCE_BASED"
          },
          "monthly_bonus_base": {
            "type": "string",
            "title": "Monthly Bonus Base",
            "default": 0
          },
          "quarterly_bonus_base": {
            "type": "string",
            "title": "Quarterly Bonus Base",
            "default": 0
          },
          "annual_bonus_base": {
            "type": "string",
            "title": "Annual Bonus Base",
            "default": 0
          },
          "monthly_bonus_calculated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus Calculated"
          },
          "quarterly_bonus_calculated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Calculated"
          },
          "annual_bonus_calculated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Calculated"
          },
          "monthly_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus Fixed Part"
          },
          "quarterly_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Fixed Part"
          },
          "annual_bonus_fixed_part": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Fixed Part"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "goal_achievements": {
            "items": {
              "$ref": "#/components/schemas/EmployeeKPIGoalInDB"
            },
            "type": "array",
            "title": "Goal Achievements",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "employee_id",
          "year",
          "month",
          "department_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "EmployeeKPIWithGoals",
        "description": "Employee KPI with related goals"
      },
      "EmployeeStatusEnum": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "ON_VACATION",
          "ON_LEAVE",
          "FIRED"
        ],
        "title": "EmployeeStatusEnum",
        "description": "Enum for employee statuses"
      },
      "EmployeeUpdate": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "position": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "employee_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Number"
          },
          "hire_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hire Date"
          },
          "fire_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fire Date"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmployeeStatusEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "base_salary": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Salary"
          },
          "monthly_bonus_base": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus Base"
          },
          "quarterly_bonus_base": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Base"
          },
          "annual_bonus_base": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Base"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "EmployeeUpdate",
        "description": "Schema for updating employee - department_id cannot be changed via update"
      },
      "EmployeeWithSalaryHistory": {
        "properties": {
          "full_name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Full Name"
          },
          "position": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Position"
          },
          "employee_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Number"
          },
          "hire_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hire Date"
          },
          "fire_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fire Date"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployeeStatusEnum"
              }
            ],
            "default": "ACTIVE"
          },
          "base_salary": {
            "type": "string",
            "title": "Base Salary"
          },
          "monthly_bonus_base": {
            "type": "string",
            "title": "Monthly Bonus Base",
            "description": "Базовая месячная премия",
            "default": 0
          },
          "quarterly_bonus_base": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Base",
            "description": "Базовая квартальная премия (опционально)"
          },
          "annual_bonus_base": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Base",
            "description": "Базовая годовая премия (опционально)"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "salary_history": {
            "items": {
              "$ref": "#/components/schemas/SalaryHistoryInDB"
            },
            "type": "array",
            "title": "Salary History",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "full_name",
          "position",
          "base_salary",
          "id",
          "department_id",
          "created_at",
          "updated_at"
        ],
        "title": "EmployeeWithSalaryHistory",
        "description": "Employee with salary history"
      },
      "ExpenseCreate": {
        "properties": {
          "number": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Number"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "contractor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractor Id"
          },
          "organization_id": {
            "type": "integer",
            "title": "Organization Id"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount"
          },
          "request_date": {
            "type": "string",
            "format": "date-time",
            "title": "Request Date"
          },
          "payment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Date"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExpenseStatusEnum"
              }
            ],
            "default": "DRAFT"
          },
          "is_paid": {
            "type": "boolean",
            "title": "Is Paid",
            "default": false
          },
          "is_closed": {
            "type": "boolean",
            "title": "Is Closed",
            "default": false
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "requester": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Requester"
          }
        },
        "type": "object",
        "required": [
          "number",
          "organization_id",
          "amount",
          "request_date"
        ],
        "title": "ExpenseCreate",
        "description": "Schema for creating expense"
      },
      "ExpenseInDB": {
        "properties": {
          "number": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Number"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "contractor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractor Id"
          },
          "organization_id": {
            "type": "integer",
            "title": "Organization Id"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "request_date": {
            "type": "string",
            "format": "date-time",
            "title": "Request Date"
          },
          "payment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Date"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExpenseStatusEnum"
              }
            ],
            "default": "DRAFT"
          },
          "is_paid": {
            "type": "boolean",
            "title": "Is Paid",
            "default": false
          },
          "is_closed": {
            "type": "boolean",
            "title": "Is Closed",
            "default": false
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "requester": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Requester"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BudgetCategoryInDB"
              },
              {
                "type": "null"
              }
            ]
          },
          "contractor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContractorInDB"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationInDB"
              },
              {
                "type": "null"
              }
            ]
          },
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/AttachmentInDB"
            },
            "type": "array",
            "title": "Attachments",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "number",
          "organization_id",
          "amount",
          "request_date",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "ExpenseInDB",
        "description": "Schema for expense from database with relationships"
      },
      "ExpenseList": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExpenseInDB"
            },
            "type": "array",
            "title": "Items"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "total",
          "items",
          "page",
          "page_size",
          "pages"
        ],
        "title": "ExpenseList",
        "description": "Schema for expense list with pagination"
      },
      "ExpenseStatusEnum": {
        "type": "string",
        "enum": [
          "DRAFT",
          "PENDING",
          "PAID",
          "REJECTED",
          "CLOSED"
        ],
        "title": "ExpenseStatusEnum",
        "description": "Enum for expense statuses"
      },
      "ExpenseStatusUpdate": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ExpenseStatusEnum"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "ExpenseStatusUpdate",
        "description": "Schema for updating expense status"
      },
      "ExpenseTypeEnum": {
        "type": "string",
        "enum": [
          "OPEX",
          "CAPEX"
        ],
        "title": "ExpenseTypeEnum",
        "description": "Enum for expense types"
      },
      "ExpenseUpdate": {
        "properties": {
          "number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "contractor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractor Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount"
          },
          "request_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Date"
          },
          "payment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Date"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExpenseStatusEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_paid": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Paid"
          },
          "is_closed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Closed"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "requester": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Requester"
          }
        },
        "type": "object",
        "title": "ExpenseUpdate",
        "description": "Schema for updating expense"
      },
      "FTPImportRequest": {
        "properties": {
          "remote_path": {
            "type": "string",
            "title": "Remote Path"
          },
          "delete_from_year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete From Year"
          },
          "delete_from_month": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delete From Month"
          },
          "skip_duplicates": {
            "type": "boolean",
            "title": "Skip Duplicates",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "remote_path"
        ],
        "title": "FTPImportRequest",
        "description": "Request schema for FTP import"
      },
      "ForecastExpenseCreate": {
        "properties": {
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "contractor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractor Id"
          },
          "organization_id": {
            "type": "integer",
            "title": "Organization Id"
          },
          "forecast_date": {
            "type": "string",
            "format": "date",
            "title": "Forecast Date"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "is_regular": {
            "type": "boolean",
            "title": "Is Regular",
            "default": false
          },
          "based_on_expense_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Based On Expense Id"
          }
        },
        "type": "object",
        "required": [
          "department_id",
          "category_id",
          "organization_id",
          "forecast_date",
          "amount"
        ],
        "title": "ForecastExpenseCreate"
      },
      "ForecastExpenseInDB": {
        "properties": {
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "contractor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractor Id"
          },
          "organization_id": {
            "type": "integer",
            "title": "Organization Id"
          },
          "forecast_date": {
            "type": "string",
            "format": "date",
            "title": "Forecast Date"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "is_regular": {
            "type": "boolean",
            "title": "Is Regular",
            "default": false
          },
          "based_on_expense_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Based On Expense Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "category": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "contractor": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractor"
          },
          "organization": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          }
        },
        "type": "object",
        "required": [
          "department_id",
          "category_id",
          "organization_id",
          "forecast_date",
          "amount",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "ForecastExpenseInDB"
      },
      "ForecastExpenseUpdate": {
        "properties": {
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "contractor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractor Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "forecast_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Forecast Date"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "is_regular": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Regular"
          }
        },
        "type": "object",
        "title": "ForecastExpenseUpdate"
      },
      "ForecastMethodEnum": {
        "type": "string",
        "enum": [
          "simple_average",
          "moving_average",
          "seasonal"
        ],
        "title": "ForecastMethodEnum"
      },
      "ForecastSummary": {
        "properties": {
          "period": {
            "$ref": "#/components/schemas/ForecastSummaryPeriod"
          },
          "forecasts": {
            "$ref": "#/components/schemas/ForecastSummaryMethods"
          }
        },
        "type": "object",
        "required": [
          "period",
          "forecasts"
        ],
        "title": "ForecastSummary"
      },
      "ForecastSummaryMethodStats": {
        "properties": {
          "total": {
            "type": "number",
            "title": "Total"
          },
          "daily_avg": {
            "type": "number",
            "title": "Daily Avg"
          }
        },
        "type": "object",
        "required": [
          "total",
          "daily_avg"
        ],
        "title": "ForecastSummaryMethodStats"
      },
      "ForecastSummaryMethods": {
        "properties": {
          "simple_average": {
            "$ref": "#/components/schemas/ForecastSummaryMethodStats"
          },
          "moving_average": {
            "$ref": "#/components/schemas/ForecastSummaryMethodStats"
          },
          "seasonal": {
            "$ref": "#/components/schemas/ForecastSummaryMethodStats"
          }
        },
        "type": "object",
        "required": [
          "simple_average",
          "moving_average",
          "seasonal"
        ],
        "title": "ForecastSummaryMethods"
      },
      "ForecastSummaryPeriod": {
        "properties": {
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "title": "End Date"
          }
        },
        "type": "object",
        "required": [
          "start_date",
          "end_date"
        ],
        "title": "ForecastSummaryPeriod"
      },
      "GenerateForecastRequest": {
        "properties": {
          "target_month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Target Month"
          },
          "target_year": {
            "type": "integer",
            "title": "Target Year"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "include_regular": {
            "type": "boolean",
            "title": "Include Regular",
            "default": true
          },
          "include_average": {
            "type": "boolean",
            "title": "Include Average",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "target_month",
          "target_year",
          "department_id"
        ],
        "title": "GenerateForecastRequest",
        "description": "Request for generating forecast"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "KPIEmployeeSummary": {
        "properties": {
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "employee_name": {
            "type": "string",
            "title": "Employee Name"
          },
          "position": {
            "type": "string",
            "title": "Position"
          },
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "month": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Month"
          },
          "kpi_percentage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kpi Percentage"
          },
          "total_bonus_calculated": {
            "type": "string",
            "title": "Total Bonus Calculated"
          },
          "monthly_bonus_calculated": {
            "type": "string",
            "title": "Monthly Bonus Calculated"
          },
          "quarterly_bonus_calculated": {
            "type": "string",
            "title": "Quarterly Bonus Calculated"
          },
          "annual_bonus_calculated": {
            "type": "string",
            "title": "Annual Bonus Calculated"
          },
          "goals_count": {
            "type": "integer",
            "title": "Goals Count"
          },
          "goals_achieved": {
            "type": "integer",
            "title": "Goals Achieved"
          }
        },
        "type": "object",
        "required": [
          "employee_id",
          "employee_name",
          "position",
          "year",
          "kpi_percentage",
          "total_bonus_calculated",
          "monthly_bonus_calculated",
          "quarterly_bonus_calculated",
          "annual_bonus_calculated",
          "goals_count",
          "goals_achieved"
        ],
        "title": "KPIEmployeeSummary",
        "description": "Summary of employee KPI performance"
      },
      "KPIGoalCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "metric_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Name"
          },
          "metric_unit": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Unit"
          },
          "target_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Value"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Weight",
            "description": "Вес цели (0-100)",
            "default": 100
          },
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2020.0,
            "title": "Year"
          },
          "is_annual": {
            "type": "boolean",
            "title": "Is Annual",
            "default": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KPIGoalStatusEnum"
              }
            ],
            "default": "DRAFT"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "year",
          "department_id"
        ],
        "title": "KPIGoalCreate",
        "description": "Schema for creating KPI goal"
      },
      "KPIGoalInDB": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "metric_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Name"
          },
          "metric_unit": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Unit"
          },
          "target_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Value"
          },
          "weight": {
            "type": "string",
            "title": "Weight",
            "description": "Вес цели (0-100)",
            "default": 100
          },
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2020.0,
            "title": "Year"
          },
          "is_annual": {
            "type": "boolean",
            "title": "Is Annual",
            "default": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KPIGoalStatusEnum"
              }
            ],
            "default": "DRAFT"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "year",
          "department_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "KPIGoalInDB",
        "description": "Schema for KPI goal in database"
      },
      "KPIGoalStatusEnum": {
        "type": "string",
        "enum": [
          "DRAFT",
          "ACTIVE",
          "ACHIEVED",
          "NOT_ACHIEVED",
          "CANCELLED"
        ],
        "title": "KPIGoalStatusEnum",
        "description": "Enum for KPI goal statuses"
      },
      "KPIGoalUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "metric_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Name"
          },
          "metric_unit": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Unit"
          },
          "target_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Value"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "year": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2100.0,
                "minimum": 2020.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Year"
          },
          "is_annual": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Annual"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/KPIGoalStatusEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "department_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          }
        },
        "type": "object",
        "title": "KPIGoalUpdate",
        "description": "Schema for updating KPI goal"
      },
      "OrganizationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "legal_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Legal Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "department_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "OrganizationCreate",
        "description": "Schema for creating organization"
      },
      "OrganizationInDB": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "legal_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Legal Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "department_id",
          "created_at",
          "updated_at"
        ],
        "title": "OrganizationInDB",
        "description": "Schema for organization from database"
      },
      "OrganizationUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "legal_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Legal Name"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "OrganizationUpdate",
        "description": "Schema for updating organization"
      },
      "PaymentCalendar": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "title": "Month"
          },
          "days": {
            "items": {
              "$ref": "#/components/schemas/PaymentCalendarDay"
            },
            "type": "array",
            "title": "Days"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "days"
        ],
        "title": "PaymentCalendar"
      },
      "PaymentCalendarDay": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "payment_count": {
            "type": "integer",
            "title": "Payment Count"
          }
        },
        "type": "object",
        "required": [
          "date",
          "total_amount",
          "payment_count"
        ],
        "title": "PaymentCalendarDay"
      },
      "PaymentDetail": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "number": {
            "type": "string",
            "title": "Number"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "payment_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Date"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "category_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Name"
          },
          "contractor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractor Id"
          },
          "contractor_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractor Name"
          },
          "organization_id": {
            "type": "integer",
            "title": "Organization Id"
          },
          "organization_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "number",
          "amount",
          "payment_date",
          "category_id",
          "category_name",
          "contractor_id",
          "contractor_name",
          "organization_id",
          "organization_name",
          "status",
          "comment"
        ],
        "title": "PaymentDetail"
      },
      "PaymentForecast": {
        "properties": {
          "period": {
            "$ref": "#/components/schemas/PaymentForecastPeriod"
          },
          "method": {
            "$ref": "#/components/schemas/ForecastMethodEnum"
          },
          "lookback_days": {
            "type": "integer",
            "title": "Lookback Days"
          },
          "summary": {
            "$ref": "#/components/schemas/PaymentForecastSummary"
          },
          "forecast": {
            "items": {
              "$ref": "#/components/schemas/PaymentForecastPoint"
            },
            "type": "array",
            "title": "Forecast"
          }
        },
        "type": "object",
        "required": [
          "period",
          "method",
          "lookback_days",
          "summary",
          "forecast"
        ],
        "title": "PaymentForecast"
      },
      "PaymentForecastPeriod": {
        "properties": {
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "title": "End Date"
          },
          "days": {
            "type": "integer",
            "title": "Days"
          }
        },
        "type": "object",
        "required": [
          "start_date",
          "end_date",
          "days"
        ],
        "title": "PaymentForecastPeriod"
      },
      "PaymentForecastPoint": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "predicted_amount": {
            "type": "number",
            "title": "Predicted Amount"
          },
          "confidence": {
            "type": "string",
            "title": "Confidence"
          },
          "method": {
            "$ref": "#/components/schemas/ForecastMethodEnum"
          }
        },
        "type": "object",
        "required": [
          "date",
          "predicted_amount",
          "confidence",
          "method"
        ],
        "title": "PaymentForecastPoint"
      },
      "PaymentForecastSummary": {
        "properties": {
          "total_predicted": {
            "type": "number",
            "title": "Total Predicted"
          },
          "average_daily": {
            "type": "number",
            "title": "Average Daily"
          }
        },
        "type": "object",
        "required": [
          "total_predicted",
          "average_daily"
        ],
        "title": "PaymentForecastSummary"
      },
      "PaymentsByDay": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "payments": {
            "items": {
              "$ref": "#/components/schemas/PaymentDetail"
            },
            "type": "array",
            "title": "Payments"
          }
        },
        "type": "object",
        "required": [
          "date",
          "total_count",
          "total_amount",
          "payments"
        ],
        "title": "PaymentsByDay"
      },
      "PayrollActualCreate": {
        "properties": {
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2000.0,
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month"
          },
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "base_salary_paid": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Base Salary Paid"
          },
          "monthly_bonus_paid": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Monthly Bonus Paid",
            "default": 0
          },
          "quarterly_bonus_paid": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Quarterly Bonus Paid",
            "default": 0
          },
          "annual_bonus_paid": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Annual Bonus Paid",
            "default": 0
          },
          "other_payments_paid": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Other Payments Paid",
            "default": 0
          },
          "payment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Date"
          },
          "expense_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expense Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "employee_id",
          "base_salary_paid"
        ],
        "title": "PayrollActualCreate",
        "description": "Schema for creating payroll actual"
      },
      "PayrollActualInDB": {
        "properties": {
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2000.0,
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month"
          },
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "base_salary_paid": {
            "type": "string",
            "title": "Base Salary Paid"
          },
          "monthly_bonus_paid": {
            "type": "string",
            "title": "Monthly Bonus Paid",
            "description": "Месячная премия (факт)",
            "default": 0
          },
          "quarterly_bonus_paid": {
            "type": "string",
            "title": "Quarterly Bonus Paid",
            "description": "Квартальная премия (факт)",
            "default": 0
          },
          "annual_bonus_paid": {
            "type": "string",
            "title": "Annual Bonus Paid",
            "description": "Годовая премия (факт)",
            "default": 0
          },
          "other_payments_paid": {
            "type": "string",
            "title": "Other Payments Paid",
            "default": 0
          },
          "total_paid": {
            "type": "string",
            "title": "Total Paid"
          },
          "payment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Date"
          },
          "expense_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expense Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "employee_id",
          "department_id",
          "base_salary_paid",
          "total_paid",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "PayrollActualInDB",
        "description": "Schema for payroll actual in database"
      },
      "PayrollActualUpdate": {
        "properties": {
          "base_salary_paid": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Salary Paid"
          },
          "monthly_bonus_paid": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus Paid"
          },
          "quarterly_bonus_paid": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus Paid"
          },
          "annual_bonus_paid": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus Paid"
          },
          "other_payments_paid": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Other Payments Paid"
          },
          "payment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Date"
          },
          "expense_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expense Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "PayrollActualUpdate",
        "description": "Schema for updating payroll actual"
      },
      "PayrollActualWithEmployee": {
        "properties": {
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2000.0,
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month"
          },
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "base_salary_paid": {
            "type": "string",
            "title": "Base Salary Paid"
          },
          "monthly_bonus_paid": {
            "type": "string",
            "title": "Monthly Bonus Paid",
            "description": "Месячная премия (факт)",
            "default": 0
          },
          "quarterly_bonus_paid": {
            "type": "string",
            "title": "Quarterly Bonus Paid",
            "description": "Квартальная премия (факт)",
            "default": 0
          },
          "annual_bonus_paid": {
            "type": "string",
            "title": "Annual Bonus Paid",
            "description": "Годовая премия (факт)",
            "default": 0
          },
          "other_payments_paid": {
            "type": "string",
            "title": "Other Payments Paid",
            "default": 0
          },
          "total_paid": {
            "type": "string",
            "title": "Total Paid"
          },
          "payment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Date"
          },
          "expense_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expense Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "employee": {
            "$ref": "#/components/schemas/EmployeeInDB"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "employee_id",
          "department_id",
          "base_salary_paid",
          "total_paid",
          "id",
          "created_at",
          "updated_at",
          "employee"
        ],
        "title": "PayrollActualWithEmployee",
        "description": "Payroll actual with employee details"
      },
      "PayrollDynamics": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "title": "Month"
          },
          "planned_base_salary": {
            "type": "string",
            "title": "Planned Base Salary"
          },
          "planned_monthly_bonus": {
            "type": "string",
            "title": "Planned Monthly Bonus",
            "default": 0
          },
          "planned_quarterly_bonus": {
            "type": "string",
            "title": "Planned Quarterly Bonus",
            "default": 0
          },
          "planned_annual_bonus": {
            "type": "string",
            "title": "Planned Annual Bonus",
            "default": 0
          },
          "planned_bonus": {
            "type": "string",
            "title": "Planned Bonus"
          },
          "planned_other": {
            "type": "string",
            "title": "Planned Other"
          },
          "planned_total": {
            "type": "string",
            "title": "Planned Total"
          },
          "actual_base_salary": {
            "type": "string",
            "title": "Actual Base Salary"
          },
          "actual_monthly_bonus": {
            "type": "string",
            "title": "Actual Monthly Bonus",
            "default": 0
          },
          "actual_quarterly_bonus": {
            "type": "string",
            "title": "Actual Quarterly Bonus",
            "default": 0
          },
          "actual_annual_bonus": {
            "type": "string",
            "title": "Actual Annual Bonus",
            "default": 0
          },
          "actual_bonus": {
            "type": "string",
            "title": "Actual Bonus"
          },
          "actual_other": {
            "type": "string",
            "title": "Actual Other"
          },
          "actual_total": {
            "type": "string",
            "title": "Actual Total"
          },
          "employee_count": {
            "type": "integer",
            "title": "Employee Count"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "planned_base_salary",
          "planned_bonus",
          "planned_other",
          "planned_total",
          "actual_base_salary",
          "actual_bonus",
          "actual_other",
          "actual_total",
          "employee_count"
        ],
        "title": "PayrollDynamics",
        "description": "Payroll dynamics over time"
      },
      "PayrollForecast": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "title": "Month"
          },
          "forecasted_total": {
            "type": "string",
            "title": "Forecasted Total"
          },
          "forecasted_base_salary": {
            "type": "string",
            "title": "Forecasted Base Salary"
          },
          "forecasted_monthly_bonus": {
            "type": "string",
            "title": "Forecasted Monthly Bonus",
            "default": 0
          },
          "forecasted_quarterly_bonus": {
            "type": "string",
            "title": "Forecasted Quarterly Bonus",
            "default": 0
          },
          "forecasted_annual_bonus": {
            "type": "string",
            "title": "Forecasted Annual Bonus",
            "default": 0
          },
          "forecasted_bonus": {
            "type": "string",
            "title": "Forecasted Bonus"
          },
          "forecasted_other": {
            "type": "string",
            "title": "Forecasted Other"
          },
          "employee_count": {
            "type": "integer",
            "title": "Employee Count"
          },
          "confidence": {
            "type": "string",
            "title": "Confidence"
          },
          "based_on_months": {
            "type": "integer",
            "title": "Based On Months"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "forecasted_total",
          "forecasted_base_salary",
          "forecasted_bonus",
          "forecasted_other",
          "employee_count",
          "confidence",
          "based_on_months"
        ],
        "title": "PayrollForecast",
        "description": "Payroll forecast for future months"
      },
      "PayrollPlanCreate": {
        "properties": {
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2000.0,
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month"
          },
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "base_salary": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Base Salary"
          },
          "monthly_bonus": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Monthly Bonus",
            "default": 0
          },
          "quarterly_bonus": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Quarterly Bonus",
            "default": 0
          },
          "annual_bonus": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Annual Bonus",
            "default": 0
          },
          "other_payments": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Other Payments",
            "default": 0
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "employee_id",
          "base_salary"
        ],
        "title": "PayrollPlanCreate",
        "description": "Schema for creating payroll plan"
      },
      "PayrollPlanInDB": {
        "properties": {
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2000.0,
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month"
          },
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "base_salary": {
            "type": "string",
            "title": "Base Salary"
          },
          "monthly_bonus": {
            "type": "string",
            "title": "Monthly Bonus",
            "description": "Месячная премия",
            "default": 0
          },
          "quarterly_bonus": {
            "type": "string",
            "title": "Quarterly Bonus",
            "description": "Квартальная премия",
            "default": 0
          },
          "annual_bonus": {
            "type": "string",
            "title": "Annual Bonus",
            "description": "Годовая премия",
            "default": 0
          },
          "other_payments": {
            "type": "string",
            "title": "Other Payments",
            "default": 0
          },
          "total_planned": {
            "type": "string",
            "title": "Total Planned"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "employee_id",
          "department_id",
          "base_salary",
          "total_planned",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "PayrollPlanInDB",
        "description": "Schema for payroll plan in database"
      },
      "PayrollPlanUpdate": {
        "properties": {
          "base_salary": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Salary"
          },
          "monthly_bonus": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Bonus"
          },
          "quarterly_bonus": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarterly Bonus"
          },
          "annual_bonus": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annual Bonus"
          },
          "other_payments": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Other Payments"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "PayrollPlanUpdate",
        "description": "Schema for updating payroll plan"
      },
      "PayrollPlanWithEmployee": {
        "properties": {
          "year": {
            "type": "integer",
            "maximum": 2100.0,
            "minimum": 2000.0,
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Month"
          },
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "department_id": {
            "type": "integer",
            "title": "Department Id"
          },
          "base_salary": {
            "type": "string",
            "title": "Base Salary"
          },
          "monthly_bonus": {
            "type": "string",
            "title": "Monthly Bonus",
            "description": "Месячная премия",
            "default": 0
          },
          "quarterly_bonus": {
            "type": "string",
            "title": "Quarterly Bonus",
            "description": "Квартальная премия",
            "default": 0
          },
          "annual_bonus": {
            "type": "string",
            "title": "Annual Bonus",
            "description": "Годовая премия",
            "default": 0
          },
          "other_payments": {
            "type": "string",
            "title": "Other Payments",
            "default": 0
          },
          "total_planned": {
            "type": "string",
            "title": "Total Planned"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "employee": {
            "$ref": "#/components/schemas/EmployeeInDB"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "employee_id",
          "department_id",
          "base_salary",
          "total_planned",
          "id",
          "created_at",
          "updated_at",
          "employee"
        ],
        "title": "PayrollPlanWithEmployee",
        "description": "Payroll plan with employee details"
      },
      "PayrollStructureMonth": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "title": "Month"
          },
          "total_base_salary": {
            "type": "string",
            "title": "Total Base Salary"
          },
          "total_monthly_bonus": {
            "type": "string",
            "title": "Total Monthly Bonus",
            "description": "Месячные премии",
            "default": 0
          },
          "total_quarterly_bonus": {
            "type": "string",
            "title": "Total Quarterly Bonus",
            "description": "Квартальные премии",
            "default": 0
          },
          "total_annual_bonus": {
            "type": "string",
            "title": "Total Annual Bonus",
            "description": "Годовые премии",
            "default": 0
          },
          "total_bonus": {
            "type": "string",
            "title": "Total Bonus",
            "description": "Всего премий (сумма всех типов)",
            "default": 0
          },
          "total_other_payments": {
            "type": "string",
            "title": "Total Other Payments"
          },
          "total_amount": {
            "type": "string",
            "title": "Total Amount"
          },
          "employee_count": {
            "type": "integer",
            "title": "Employee Count"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "total_base_salary",
          "total_other_payments",
          "total_amount",
          "employee_count"
        ],
        "title": "PayrollStructureMonth",
        "description": "Payroll structure breakdown for a single month"
      },
      "PayrollSummary": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "title": "Month"
          },
          "total_employees": {
            "type": "integer",
            "title": "Total Employees"
          },
          "total_planned": {
            "type": "string",
            "title": "Total Planned"
          },
          "total_paid": {
            "type": "string",
            "title": "Total Paid"
          },
          "variance": {
            "type": "string",
            "title": "Variance"
          },
          "variance_percent": {
            "type": "number",
            "title": "Variance Percent"
          }
        },
        "type": "object",
        "required": [
          "year",
          "month",
          "total_employees",
          "total_planned",
          "total_paid",
          "variance",
          "variance_percent"
        ],
        "title": "PayrollSummary",
        "description": "Payroll summary for analytics"
      },
      "SalaryHistoryCreate": {
        "properties": {
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "old_salary": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Salary"
          },
          "new_salary": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "New Salary"
          },
          "effective_date": {
            "type": "string",
            "format": "date",
            "title": "Effective Date"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "employee_id",
          "new_salary",
          "effective_date"
        ],
        "title": "SalaryHistoryCreate",
        "description": "Schema for creating salary history"
      },
      "SalaryHistoryInDB": {
        "properties": {
          "employee_id": {
            "type": "integer",
            "title": "Employee Id"
          },
          "old_salary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Salary"
          },
          "new_salary": {
            "type": "string",
            "title": "New Salary"
          },
          "effective_date": {
            "type": "string",
            "format": "date",
            "title": "Effective Date"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "employee_id",
          "new_salary",
          "effective_date",
          "id",
          "created_at"
        ],
        "title": "SalaryHistoryInDB",
        "description": "Schema for salary history in database"
      },
      "SalaryStatistics": {
        "properties": {
          "total_employees": {
            "type": "integer",
            "title": "Total Employees"
          },
          "active_employees": {
            "type": "integer",
            "title": "Active Employees"
          },
          "min_salary": {
            "type": "string",
            "title": "Min Salary"
          },
          "max_salary": {
            "type": "string",
            "title": "Max Salary"
          },
          "average_salary": {
            "type": "string",
            "title": "Average Salary"
          },
          "median_salary": {
            "type": "string",
            "title": "Median Salary"
          },
          "percentile_25": {
            "type": "string",
            "title": "Percentile 25"
          },
          "percentile_75": {
            "type": "string",
            "title": "Percentile 75"
          },
          "percentile_90": {
            "type": "string",
            "title": "Percentile 90"
          },
          "total_payroll": {
            "type": "string",
            "title": "Total Payroll"
          }
        },
        "type": "object",
        "required": [
          "total_employees",
          "active_employees",
          "min_salary",
          "max_salary",
          "average_salary",
          "median_salary",
          "percentile_25",
          "percentile_75",
          "percentile_90",
          "total_payroll"
        ],
        "title": "SalaryStatistics",
        "description": "Salary distribution statistics"
      },
      "TrendItem": {
        "properties": {
          "month": {
            "type": "integer",
            "title": "Month"
          },
          "month_name": {
            "type": "string",
            "title": "Month Name"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "month",
          "month_name",
          "amount",
          "count"
        ],
        "title": "TrendItem"
      },
      "Trends": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "trends": {
            "items": {
              "$ref": "#/components/schemas/TrendItem"
            },
            "type": "array",
            "title": "Trends"
          }
        },
        "type": "object",
        "required": [
          "year",
          "trends"
        ],
        "title": "Trends"
      },
      "User": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "department_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          },
          "position": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "role": {
            "$ref": "#/components/schemas/UserRoleEnum"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "id",
          "role",
          "is_active",
          "is_verified",
          "created_at",
          "updated_at"
        ],
        "title": "User",
        "description": "Schema for user response (without password)"
      },
      "UserCreate": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "department_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          },
          "position": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 6,
            "title": "Password"
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserRoleEnum"
              }
            ],
            "default": "USER"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "password"
        ],
        "title": "UserCreate",
        "description": "Schema for user registration"
      },
      "UserListItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "role": {
            "$ref": "#/components/schemas/UserRoleEnum"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "department_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          },
          "position": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "role",
          "is_active"
        ],
        "title": "UserListItem",
        "description": "Schema for user in list view"
      },
      "UserLogin": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "UserLogin",
        "description": "Schema for user login"
      },
      "UserLoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "user"
        ],
        "title": "UserLoginResponse",
        "description": "Schema for login response"
      },
      "UserPasswordChange": {
        "properties": {
          "old_password": {
            "type": "string",
            "title": "Old Password"
          },
          "new_password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 6,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "old_password",
          "new_password"
        ],
        "title": "UserPasswordChange",
        "description": "Schema for changing user password"
      },
      "UserRoleEnum": {
        "type": "string",
        "enum": [
          "ADMIN",
          "MANAGER",
          "USER"
        ],
        "title": "UserRoleEnum",
        "description": "Enum for user roles in BDR (Budget Department Reporting)"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "department_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          },
          "position": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRoleEnum"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "Schema for updating user information"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VersionComparisonResult": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "v1_amount": {
            "type": "string",
            "title": "V1 Amount"
          },
          "v2_amount": {
            "type": "string",
            "title": "V2 Amount"
          },
          "difference": {
            "type": "string",
            "title": "Difference"
          },
          "difference_percent": {
            "type": "string",
            "title": "Difference Percent"
          }
        },
        "type": "object",
        "required": [
          "category",
          "v1_amount",
          "v2_amount",
          "difference",
          "difference_percent"
        ],
        "title": "VersionComparisonResult",
        "description": "Result of comparing two versions"
      },
      "app__api__v1__categories__BulkDeleteRequest": {
        "properties": {
          "ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Ids"
          }
        },
        "type": "object",
        "required": [
          "ids"
        ],
        "title": "BulkDeleteRequest",
        "description": "Request for bulk delete operations"
      },
      "app__api__v1__categories__BulkUpdateRequest": {
        "properties": {
          "ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Ids"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "ids"
        ],
        "title": "BulkUpdateRequest",
        "description": "Request for bulk update operations"
      },
      "app__api__v1__contractors__BulkDeleteRequest": {
        "properties": {
          "ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Ids"
          }
        },
        "type": "object",
        "required": [
          "ids"
        ],
        "title": "BulkDeleteRequest"
      },
      "app__api__v1__contractors__BulkUpdateRequest": {
        "properties": {
          "ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Ids"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "ids",
          "is_active"
        ],
        "title": "BulkUpdateRequest"
      },
      "app__api__v1__organizations__BulkDeleteRequest": {
        "properties": {
          "ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Ids"
          }
        },
        "type": "object",
        "required": [
          "ids"
        ],
        "title": "BulkDeleteRequest"
      },
      "app__api__v1__organizations__BulkUpdateRequest": {
        "properties": {
          "ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Ids"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "ids",
          "is_active"
        ],
        "title": "BulkUpdateRequest"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/auth/login"
          }
        }
      }
    }
  }
}