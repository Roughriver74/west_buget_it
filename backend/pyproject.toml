[tool.poetry]
name = "it-budget-backend"
version = "0.5.0"
description = "IT Budget Manager Backend API - Full-stack web application for managing IT department budgets"
authors = ["IT Budget Team <noreply@itbudget.local>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
psycopg2-binary = "^2.9.9"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
python-multipart = "^0.0.6"
python-dotenv = "^1.0.0"
pandas = "^2.1.3"
openpyxl = "^3.1.2"
python-dateutil = "^2.8.2"
httpx = "^0.25.1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
redis = "^5.0.1"
sentry-sdk = {extras = ["fastapi"], version = "^1.39.2"}
prometheus-fastapi-instrumentator = "^6.1.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-benchmark = "^4.0.0"
faker = "^22.0.0"
factory-boy = "^3.3.0"

# Linting and Formatting
black = "^23.12.1"
isort = "^5.13.2"
flake8 = "^7.0.0"
flake8-docstrings = "^1.7.0"
flake8-bugbear = "^23.12.23"
flake8-comprehensions = "^3.14.0"
pylint = "^3.0.3"

# Type Checking
mypy = "^1.8.0"
types-redis = "^4.6.0"
types-python-dateutil = "^2.8.19"

# Pre-commit
pre-commit = "^3.6.0"

# Documentation
sphinx = "^7.2.6"
sphinx-rtd-theme = "^2.0.0"

# Security and Debugging
bandit = "^1.7.6"
safety = "^3.0.1"
ipdb = "^0.13.13"
ipython = "^8.19.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | alembic/versions
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/alembic/versions/*", "*/migrations/*"]
known_first_party = ["app"]
known_third_party = ["fastapi", "sqlalchemy", "pydantic", "alembic"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "auth: marks tests related to authentication",
    "rbac: marks tests related to role-based access control",
    "kpi: marks tests related to KPI functionality",
    "payroll: marks tests related to payroll functionality",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/alembic/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if typing.TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_calls = false
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
pretty = true
show_error_codes = true
show_error_context = true
show_column_numbers = true
plugins = ["sqlalchemy.ext.mypy.plugin", "pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "jose.*",
    "passlib.*",
    "aioftp.*",
    "openpyxl.*",
    "pandas.*",
    "prometheus_client.*",
    "sentry_sdk.*",
]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.bandit]
exclude_dirs = ["/tests", "/alembic", "/venv"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]
