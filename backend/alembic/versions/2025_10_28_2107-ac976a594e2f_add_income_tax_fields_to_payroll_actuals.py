"""add income tax fields to payroll_actuals

Revision ID: ac976a594e2f
Revises: 5c5af3ac5381
Create Date: 2025-10-28 21:07:27.116046+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ac976a594e2f'
down_revision: Union[str, None] = '5c5af3ac5381'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check and drop index/column from budget_versions if they exist
    conn = op.get_bind()
    inspector = sa.inspect(conn)

    # Check if index exists before dropping
    indexes = [idx['name'] for idx in inspector.get_indexes('budget_versions')]
    if 'idx_budget_version_baseline' in indexes:
        op.drop_index('idx_budget_version_baseline', table_name='budget_versions')

    # Check if column exists before dropping
    columns = [c['name'] for c in inspector.get_columns('budget_versions')]
    if 'is_baseline' in columns:
        op.drop_column('budget_versions', 'is_baseline')
    op.execute("ALTER TABLE employee_kpi_goals ALTER COLUMN status DROP DEFAULT")
    op.execute("ALTER TABLE employee_kpi_goals ALTER COLUMN status TYPE kpigoalstatusenum USING status::text::kpigoalstatusenum")
    op.execute("ALTER TABLE employee_kpi_goals ALTER COLUMN status SET DEFAULT 'ACTIVE'::kpigoalstatusenum")

    # Check and drop indexes from employee_kpi_goals if they exist
    employee_kpi_goals_indexes = [idx['name'] for idx in inspector.get_indexes('employee_kpi_goals')]
    for idx_name in ['idx_employee_kpi_goals_employee_id', 'idx_employee_kpi_goals_employee_kpi_id',
                     'idx_employee_kpi_goals_goal_id', 'idx_employee_kpi_goals_month', 'idx_employee_kpi_goals_year']:
        if idx_name in employee_kpi_goals_indexes:
            op.drop_index(idx_name, table_name='employee_kpi_goals')

    # Create new indexes only if they don't exist
    employee_kpi_goals_indexes = [idx['name'] for idx in inspector.get_indexes('employee_kpi_goals')]
    if 'ix_employee_kpi_goals_employee_id' not in employee_kpi_goals_indexes:
        op.create_index(op.f('ix_employee_kpi_goals_employee_id'), 'employee_kpi_goals', ['employee_id'], unique=False)
    if 'ix_employee_kpi_goals_employee_kpi_id' not in employee_kpi_goals_indexes:
        op.create_index(op.f('ix_employee_kpi_goals_employee_kpi_id'), 'employee_kpi_goals', ['employee_kpi_id'], unique=False)
    if 'ix_employee_kpi_goals_goal_id' not in employee_kpi_goals_indexes:
        op.create_index(op.f('ix_employee_kpi_goals_goal_id'), 'employee_kpi_goals', ['goal_id'], unique=False)
    if 'ix_employee_kpi_goals_id' not in employee_kpi_goals_indexes:
        op.create_index(op.f('ix_employee_kpi_goals_id'), 'employee_kpi_goals', ['id'], unique=False)
    if 'ix_employee_kpi_goals_month' not in employee_kpi_goals_indexes:
        op.create_index(op.f('ix_employee_kpi_goals_month'), 'employee_kpi_goals', ['month'], unique=False)
    if 'ix_employee_kpi_goals_year' not in employee_kpi_goals_indexes:
        op.create_index(op.f('ix_employee_kpi_goals_year'), 'employee_kpi_goals', ['year'], unique=False)
    op.execute("ALTER TABLE employee_kpis ALTER COLUMN monthly_bonus_type DROP DEFAULT")
    op.execute("ALTER TABLE employee_kpis ALTER COLUMN monthly_bonus_type TYPE bonustypeenum USING monthly_bonus_type::text::bonustypeenum")
    op.execute("ALTER TABLE employee_kpis ALTER COLUMN monthly_bonus_type SET DEFAULT 'PERFORMANCE_BASED'::bonustypeenum")
    op.execute("ALTER TABLE employee_kpis ALTER COLUMN quarterly_bonus_type DROP DEFAULT")
    op.execute("ALTER TABLE employee_kpis ALTER COLUMN quarterly_bonus_type TYPE bonustypeenum USING quarterly_bonus_type::text::bonustypeenum")
    op.execute("ALTER TABLE employee_kpis ALTER COLUMN quarterly_bonus_type SET DEFAULT 'PERFORMANCE_BASED'::bonustypeenum")
    op.execute("ALTER TABLE employee_kpis ALTER COLUMN annual_bonus_type DROP DEFAULT")
    op.execute("ALTER TABLE employee_kpis ALTER COLUMN annual_bonus_type TYPE bonustypeenum USING annual_bonus_type::text::bonustypeenum")
    op.execute("ALTER TABLE employee_kpis ALTER COLUMN annual_bonus_type SET DEFAULT 'PERFORMANCE_BASED'::bonustypeenum")

    # Check and drop index from employee_kpis if it exists
    employee_kpis_indexes = [idx['name'] for idx in inspector.get_indexes('employee_kpis')]
    if 'idx_employee_kpis_employee_id' in employee_kpis_indexes:
        op.drop_index('idx_employee_kpis_employee_id', table_name='employee_kpis')

    # Create new indexes only if they don't exist
    employee_kpis_indexes = [idx['name'] for idx in inspector.get_indexes('employee_kpis')]
    if 'ix_employee_kpis_department_id' not in employee_kpis_indexes:
        op.create_index(op.f('ix_employee_kpis_department_id'), 'employee_kpis', ['department_id'], unique=False)
    if 'ix_employee_kpis_employee_id' not in employee_kpis_indexes:
        op.create_index(op.f('ix_employee_kpis_employee_id'), 'employee_kpis', ['employee_id'], unique=False)
    if 'ix_employee_kpis_id' not in employee_kpis_indexes:
        op.create_index(op.f('ix_employee_kpis_id'), 'employee_kpis', ['id'], unique=False)
    if 'ix_employee_kpis_month' not in employee_kpis_indexes:
        op.create_index(op.f('ix_employee_kpis_month'), 'employee_kpis', ['month'], unique=False)
    if 'ix_employee_kpis_year' not in employee_kpis_indexes:
        op.create_index(op.f('ix_employee_kpis_year'), 'employee_kpis', ['year'], unique=False)
    op.execute("ALTER TABLE kpi_goals ALTER COLUMN status DROP DEFAULT")
    op.execute("ALTER TABLE kpi_goals ALTER COLUMN status TYPE kpigoalstatusenum USING status::text::kpigoalstatusenum")
    op.execute("ALTER TABLE kpi_goals ALTER COLUMN status SET DEFAULT 'DRAFT'::kpigoalstatusenum")

    # Check and drop indexes from kpi_goals if they exist
    kpi_goals_indexes = [idx['name'] for idx in inspector.get_indexes('kpi_goals')]
    for idx_name in ['idx_kpi_goals_category', 'idx_kpi_goals_name', 'idx_kpi_goals_year']:
        if idx_name in kpi_goals_indexes:
            op.drop_index(idx_name, table_name='kpi_goals')

    # Create new indexes only if they don't exist
    kpi_goals_indexes = [idx['name'] for idx in inspector.get_indexes('kpi_goals')]
    if 'ix_kpi_goals_category' not in kpi_goals_indexes:
        op.create_index(op.f('ix_kpi_goals_category'), 'kpi_goals', ['category'], unique=False)
    if 'ix_kpi_goals_department_id' not in kpi_goals_indexes:
        op.create_index(op.f('ix_kpi_goals_department_id'), 'kpi_goals', ['department_id'], unique=False)
    if 'ix_kpi_goals_id' not in kpi_goals_indexes:
        op.create_index(op.f('ix_kpi_goals_id'), 'kpi_goals', ['id'], unique=False)
    if 'ix_kpi_goals_name' not in kpi_goals_indexes:
        op.create_index(op.f('ix_kpi_goals_name'), 'kpi_goals', ['name'], unique=False)
    if 'ix_kpi_goals_status' not in kpi_goals_indexes:
        op.create_index(op.f('ix_kpi_goals_status'), 'kpi_goals', ['status'], unique=False)
    if 'ix_kpi_goals_year' not in kpi_goals_indexes:
        op.create_index(op.f('ix_kpi_goals_year'), 'kpi_goals', ['year'], unique=False)
    op.add_column('payroll_actuals', sa.Column('income_tax_rate', sa.Numeric(precision=5, scale=4), nullable=False, server_default='0.13'))
    op.add_column('payroll_actuals', sa.Column('income_tax_amount', sa.Numeric(precision=15, scale=2), nullable=False, server_default='0'))
    op.add_column('payroll_actuals', sa.Column('social_tax_amount', sa.Numeric(precision=15, scale=2), nullable=False, server_default='0'))

    # Check if columns exist before dropping
    payroll_actuals_columns = [c['name'] for c in inspector.get_columns('payroll_actuals')]
    if 'bonus_paid' in payroll_actuals_columns:
        op.drop_column('payroll_actuals', 'bonus_paid')

    payroll_plans_columns = [c['name'] for c in inspector.get_columns('payroll_plans')]
    if 'bonus' in payroll_plans_columns:
        op.drop_column('payroll_plans', 'bonus')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('payroll_plans', sa.Column('bonus', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False))
    op.add_column('payroll_actuals', sa.Column('bonus_paid', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False))
    op.drop_column('payroll_actuals', 'social_tax_amount')
    op.drop_column('payroll_actuals', 'income_tax_amount')
    op.drop_column('payroll_actuals', 'income_tax_rate')
    op.drop_index(op.f('ix_kpi_goals_year'), table_name='kpi_goals')
    op.drop_index(op.f('ix_kpi_goals_status'), table_name='kpi_goals')
    op.drop_index(op.f('ix_kpi_goals_name'), table_name='kpi_goals')
    op.drop_index(op.f('ix_kpi_goals_id'), table_name='kpi_goals')
    op.drop_index(op.f('ix_kpi_goals_department_id'), table_name='kpi_goals')
    op.drop_index(op.f('ix_kpi_goals_category'), table_name='kpi_goals')
    op.create_index('idx_kpi_goals_year', 'kpi_goals', ['year'], unique=False)
    op.create_index('idx_kpi_goals_name', 'kpi_goals', ['name'], unique=False)
    op.create_index('idx_kpi_goals_category', 'kpi_goals', ['category'], unique=False)
    op.alter_column('kpi_goals', 'status',
               existing_type=sa.Enum('DRAFT', 'ACTIVE', 'ACHIEVED', 'NOT_ACHIEVED', 'CANCELLED', name='kpigoalstatusenum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False,
               existing_server_default=sa.text("'DRAFT'::character varying"))
    op.drop_index(op.f('ix_employee_kpis_year'), table_name='employee_kpis')
    op.drop_index(op.f('ix_employee_kpis_month'), table_name='employee_kpis')
    op.drop_index(op.f('ix_employee_kpis_id'), table_name='employee_kpis')
    op.drop_index(op.f('ix_employee_kpis_employee_id'), table_name='employee_kpis')
    op.drop_index(op.f('ix_employee_kpis_department_id'), table_name='employee_kpis')
    op.create_index('idx_employee_kpis_employee_id', 'employee_kpis', ['employee_id'], unique=False)
    op.alter_column('employee_kpis', 'annual_bonus_type',
               existing_type=sa.Enum('PERFORMANCE_BASED', 'FIXED', 'MIXED', name='bonustypeenum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False,
               existing_server_default=sa.text("'PERFORMANCE_BASED'::character varying"))
    op.alter_column('employee_kpis', 'quarterly_bonus_type',
               existing_type=sa.Enum('PERFORMANCE_BASED', 'FIXED', 'MIXED', name='bonustypeenum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False,
               existing_server_default=sa.text("'PERFORMANCE_BASED'::character varying"))
    op.alter_column('employee_kpis', 'monthly_bonus_type',
               existing_type=sa.Enum('PERFORMANCE_BASED', 'FIXED', 'MIXED', name='bonustypeenum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False,
               existing_server_default=sa.text("'PERFORMANCE_BASED'::character varying"))
    op.drop_index(op.f('ix_employee_kpi_goals_year'), table_name='employee_kpi_goals')
    op.drop_index(op.f('ix_employee_kpi_goals_month'), table_name='employee_kpi_goals')
    op.drop_index(op.f('ix_employee_kpi_goals_id'), table_name='employee_kpi_goals')
    op.drop_index(op.f('ix_employee_kpi_goals_goal_id'), table_name='employee_kpi_goals')
    op.drop_index(op.f('ix_employee_kpi_goals_employee_kpi_id'), table_name='employee_kpi_goals')
    op.drop_index(op.f('ix_employee_kpi_goals_employee_id'), table_name='employee_kpi_goals')
    op.create_index('idx_employee_kpi_goals_year', 'employee_kpi_goals', ['year'], unique=False)
    op.create_index('idx_employee_kpi_goals_month', 'employee_kpi_goals', ['month'], unique=False)
    op.create_index('idx_employee_kpi_goals_goal_id', 'employee_kpi_goals', ['goal_id'], unique=False)
    op.create_index('idx_employee_kpi_goals_employee_kpi_id', 'employee_kpi_goals', ['employee_kpi_id'], unique=False)
    op.create_index('idx_employee_kpi_goals_employee_id', 'employee_kpi_goals', ['employee_id'], unique=False)
    op.alter_column('employee_kpi_goals', 'status',
               existing_type=sa.Enum('DRAFT', 'ACTIVE', 'ACHIEVED', 'NOT_ACHIEVED', 'CANCELLED', name='kpigoalstatusenum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False,
               existing_server_default=sa.text("'ACTIVE'::character varying"))
    op.add_column('budget_versions', sa.Column('is_baseline', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.create_index('idx_budget_version_baseline', 'budget_versions', ['department_id', 'year', 'is_baseline'], unique=False)
    # ### end Alembic commands ###
