# ================================================================
# IT Budget Manager - Backend Configuration (Example)
# ================================================================
# Copy this file to .env and update with your actual values
# Generate .env: cp .env.example .env
# ================================================================

# ----------------------------------------------------------------
# Database Configuration
# ----------------------------------------------------------------
DATABASE_URL=postgresql://budget_user:budget_pass@localhost:54329/it_budget_db
DB_HOST=localhost
DB_PORT=54329
DB_NAME=it_budget_db
DB_USER=budget_user
DB_PASSWORD=budget_pass

# ----------------------------------------------------------------
# Application Settings
# ----------------------------------------------------------------
APP_NAME=IT Budget Manager
APP_VERSION=0.5.0
DEBUG=True
API_PREFIX=/api/v1

# ----------------------------------------------------------------
# CORS Configuration
# ----------------------------------------------------------------
# Allowed origins for CORS (comma-separated list as JSON array)
# For production, replace with your actual domain(s)
CORS_ORIGINS=["http://localhost:5173","http://localhost:3000"]

# ----------------------------------------------------------------
# Security Configuration
# ----------------------------------------------------------------
# SECRET_KEY: Used for JWT token signing and other cryptographic operations
# ⚠️  CRITICAL: Generate a secure key before running in production!
# ⚠️  Must be at least 32 characters long
# ⚠️  Keep this secret and never share it!
#
# Generate a secure key using:
#   python -c "import secrets; print(secrets.token_urlsafe(64))"
#
SECRET_KEY=GENERATE-YOUR-OWN-SECRET-KEY-MINIMUM-32-CHARACTERS-USE-COMMAND-ABOVE

# JWT Algorithm (HS256 is recommended)
ALGORITHM=HS256

# Token expiration time in minutes (default: 30 minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# ----------------------------------------------------------------
# Admin User Configuration (Optional)
# ----------------------------------------------------------------
# Default admin user created on first deployment
# If not set, defaults will be used (admin/admin)
# ⚠️  IMPORTANT: Change these values in production!
ADMIN_USERNAME=admin
ADMIN_PASSWORD=admin
ADMIN_EMAIL=admin@example.com
ADMIN_FULL_NAME=System Administrator

# ----------------------------------------------------------------
# Redis Configuration (Optional)
# ----------------------------------------------------------------
# Enable Redis for distributed rate limiting and caching
# Set USE_REDIS=True to enable Redis features
USE_REDIS=False
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# ----------------------------------------------------------------
# Production Deployment Checklist
# ----------------------------------------------------------------
# [ ] Set DEBUG=False
# [ ] Generate and set a strong SECRET_KEY (min 32 chars, use command above)
# [ ] Use strong database password (not 'budget_pass')
# [ ] Change ADMIN_PASSWORD from default 'admin' to a strong password
# [ ] Update ADMIN_EMAIL to actual admin email address
# [ ] Update CORS_ORIGINS to include only your production domains
# [ ] Enable HTTPS/TLS for all connections
# [ ] Consider enabling Redis for better performance (USE_REDIS=True)
# [ ] Set appropriate ACCESS_TOKEN_EXPIRE_MINUTES (e.g., 15-30 minutes)
# [ ] Review and configure security headers in main.py
# ----------------------------------------------------------------
