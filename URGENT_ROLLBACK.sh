#!/bin/bash
# üö® –°–†–û–ß–ù–´–ô –û–¢–ö–ê–¢ - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞

echo "========================================="
echo "üö® –°–†–û–ß–ù–´–ô –û–¢–ö–ê–¢ –ò–ó–ú–ï–ù–ï–ù–ò–ô"
echo "========================================="
echo ""

# –ù–∞–π—Ç–∏ docker-compose –∫–æ–º–∞–Ω–¥—É
if command -v docker-compose &> /dev/null; then
    DC="docker-compose"
elif command -v docker &> /dev/null; then
    DC="docker compose"
else
    echo "‚ùå ERROR: Docker not found"
    exit 1
fi

# –ù–∞–π—Ç–∏ compose file
COMPOSE_FILE=""
for file in docker-compose.prod.yml docker-compose.yml; do
    if [ -f "$file" ]; then
        COMPOSE_FILE="$file"
        break
    fi
done

if [ -z "$COMPOSE_FILE" ]; then
    echo "‚ùå ERROR: docker-compose file not found"
    exit 1
fi

echo "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: $COMPOSE_FILE"
echo ""

# –®–ê–ì 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
echo "========================================="
echo "–®–ê–ì 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"
echo "========================================="
$DC -f $COMPOSE_FILE ps
echo ""

# –®–ê–ì 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ backend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫)
echo "========================================="
echo "–®–ê–ì 2: –õ–æ–≥–∏ Backend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫)"
echo "========================================="
$DC -f $COMPOSE_FILE logs backend --tail=50
echo ""

# –®–ê–ì 3: –í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è
echo "========================================="
echo "–®–ê–ì 3: –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"
echo "========================================="
echo ""
echo "–ß—Ç–æ –¥–µ–ª–∞—Ç—å?"
echo "1) –û—Ç–∫–∞—Ç–∏—Ç—å –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –∫–æ–º–º–∏—Ç—É (–ë–´–°–¢–†–û)"
echo "2) –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
echo "3) –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ—â—ë –±–æ–ª—å—à–µ –ª–æ–≥–æ–≤"
echo "4) –í—ã—Ö–æ–¥ (–Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å)"
echo ""
read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): " choice

case $choice in
    1)
        echo ""
        echo "========================================="
        echo "–û–¢–ö–ê–¢ –ö –ü–†–ï–î–´–î–£–©–ï–ú–£ –ö–û–ú–ú–ò–¢–£"
        echo "========================================="
        echo ""

        # –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã
        echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã:"
        git log --oneline -5
        echo ""

        # –û—Ç–∫–∞—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç
        echo "–û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç..."
        git reset --hard HEAD~1

        echo ""
        echo "‚úÖ –û—Ç–∫–∞—Ç–∏–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–º–º–∏—Ç"
        echo ""

        # –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
        echo "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞..."
        $DC -f $COMPOSE_FILE down backend
        $DC -f $COMPOSE_FILE build --no-cache backend
        $DC -f $COMPOSE_FILE up -d backend

        echo ""
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (30 —Å–µ–∫—É–Ω–¥)..."
        sleep 30

        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
        echo ""
        echo "–°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞:"
        $DC -f $COMPOSE_FILE ps

        echo ""
        echo "–õ–æ–≥–∏ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞:"
        $DC -f $COMPOSE_FILE logs backend --tail=30

        echo ""
        echo "‚úÖ –û–¢–ö–ê–¢ –ó–ê–í–ï–†–®–Å–ù"
        echo ""
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç: https://budget-west.shknv.ru"
        ;;

    2)
        echo ""
        echo "========================================="
        echo "–ü–ï–†–ï–ó–ê–ü–£–°–ö –ö–û–ù–¢–ï–ô–ù–ï–†–û–í"
        echo "========================================="
        echo ""

        echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        $DC -f $COMPOSE_FILE restart

        echo ""
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (30 —Å–µ–∫—É–Ω–¥)..."
        sleep 30

        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
        echo ""
        echo "–°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞:"
        $DC -f $COMPOSE_FILE ps

        echo ""
        echo "–õ–æ–≥–∏ backend:"
        $DC -f $COMPOSE_FILE logs backend --tail=30

        echo ""
        echo "‚úÖ –ü–ï–†–ï–ó–ê–ü–£–°–ö –ó–ê–í–ï–†–®–Å–ù"
        ;;

    3)
        echo ""
        echo "========================================="
        echo "–ü–û–õ–ù–´–ï –õ–û–ì–ò BACKEND"
        echo "========================================="
        $DC -f $COMPOSE_FILE logs backend --tail=200
        ;;

    4)
        echo ""
        echo "–í—ã—Ö–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π."
        exit 0
        ;;

    *)
        echo ""
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í—ã—Ö–æ–¥."
        exit 1
        ;;
esac

echo ""
echo "========================================="
echo "–ì–û–¢–û–í–û"
echo "========================================="
