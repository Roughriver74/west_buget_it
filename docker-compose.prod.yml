version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: it_budget_db_prod
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-budget_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-budget_pass}
      POSTGRES_DB: ${DB_NAME:-it_budget_db}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-54329}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-budget_user} -d ${DB_NAME:-it_budget_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - budget_network

  # Redis (optional, for caching and rate limiting)
  redis:
    image: redis:7-alpine
    container_name: it_budget_redis_prod
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - budget_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    image: it-budget-backend:prod
    container_name: it_budget_backend_prod
    restart: always
    environment:
      # Database
      DATABASE_URL: postgresql://${DB_USER:-budget_user}:${DB_PASSWORD:-budget_pass}@db:5432/${DB_NAME:-it_budget_db}
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-it_budget_db}
      DB_USER: ${DB_USER:-budget_user}
      DB_PASSWORD: ${DB_PASSWORD:-budget_pass}

      # Application
      DEBUG: "False"
      APP_NAME: "IT Budget Manager"
      APP_VERSION: "0.5.0"
      API_PREFIX: /api/v1

      # Security
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30

      # CORS
      CORS_ORIGINS: ${CORS_ORIGINS:-'["https://yourdomain.com"]'}

      # Redis (if using)
      REDIS_URL: redis://redis:6379

      # Monitoring
      SENTRY_DSN: ${SENTRY_DSN:-}
      PROMETHEUS_ENABLED: ${PROMETHEUS_ENABLED:-true}
    ports:
      - "${BACKEND_PORT:-8888}:8000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
      - ./backend/templates:/app/templates
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - budget_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:8888}
    image: it-budget-frontend:prod
    container_name: it_budget_frontend_prod
    restart: always
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    networks:
      - budget_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  budget_network:
    driver: bridge
